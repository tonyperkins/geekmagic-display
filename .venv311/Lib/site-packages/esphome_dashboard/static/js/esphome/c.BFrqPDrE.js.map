{"version":3,"file":"c.BFrqPDrE.js","sources":["../../../../node_modules/esptool-js/lib/targets/esp32c61.js"],"sourcesContent":["import { ESP32C6ROM } from \"./esp32c6\";\nexport class ESP32C61ROM extends ESP32C6ROM {\n    constructor() {\n        super(...arguments);\n        this.CHIP_NAME = \"ESP32-C61\";\n        this.IMAGE_CHIP_ID = 20;\n        this.CHIP_DETECT_MAGIC_VALUE = [0x33f0206f, 0x2421606f];\n        this.UART_DATE_REG_ADDR = 0x60000000 + 0x7c;\n        this.EFUSE_BASE = 0x600b4800;\n        this.EFUSE_BLOCK1_ADDR = this.EFUSE_BASE + 0x044;\n        this.MAC_EFUSE_REG = this.EFUSE_BASE + 0x044;\n        this.EFUSE_RD_REG_BASE = this.EFUSE_BASE + 0x030; // BLOCK0 read base address\n        this.EFUSE_PURPOSE_KEY0_REG = this.EFUSE_BASE + 0x34;\n        this.EFUSE_PURPOSE_KEY0_SHIFT = 0;\n        this.EFUSE_PURPOSE_KEY1_REG = this.EFUSE_BASE + 0x34;\n        this.EFUSE_PURPOSE_KEY1_SHIFT = 4;\n        this.EFUSE_PURPOSE_KEY2_REG = this.EFUSE_BASE + 0x34;\n        this.EFUSE_PURPOSE_KEY2_SHIFT = 8;\n        this.EFUSE_PURPOSE_KEY3_REG = this.EFUSE_BASE + 0x34;\n        this.EFUSE_PURPOSE_KEY3_SHIFT = 12;\n        this.EFUSE_PURPOSE_KEY4_REG = this.EFUSE_BASE + 0x34;\n        this.EFUSE_PURPOSE_KEY4_SHIFT = 16;\n        this.EFUSE_PURPOSE_KEY5_REG = this.EFUSE_BASE + 0x34;\n        this.EFUSE_PURPOSE_KEY5_SHIFT = 20;\n        this.EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_REG = this.EFUSE_RD_REG_BASE;\n        this.EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT = 1 << 20;\n        this.EFUSE_SPI_BOOT_CRYPT_CNT_REG = this.EFUSE_BASE + 0x030;\n        this.EFUSE_SPI_BOOT_CRYPT_CNT_MASK = 0x7 << 23;\n        this.EFUSE_SECURE_BOOT_EN_REG = this.EFUSE_BASE + 0x034;\n        this.EFUSE_SECURE_BOOT_EN_MASK = 1 << 26;\n        this.FLASH_FREQUENCY = {\n            \"80m\": 0xf,\n            \"40m\": 0x0,\n            \"20m\": 0x2,\n        };\n        this.MEMORY_MAP = [\n            [0x00000000, 0x00010000, \"PADDING\"],\n            [0x41800000, 0x42000000, \"DROM\"],\n            [0x40800000, 0x40860000, \"DRAM\"],\n            [0x40800000, 0x40860000, \"BYTE_ACCESSIBLE\"],\n            [0x4004ac00, 0x40050000, \"DROM_MASK\"],\n            [0x40000000, 0x4004ac00, \"IROM_MASK\"],\n            [0x41000000, 0x41800000, \"IROM\"],\n            [0x40800000, 0x40860000, \"IRAM\"],\n            [0x50000000, 0x50004000, \"RTC_IRAM\"],\n            [0x50000000, 0x50004000, \"RTC_DRAM\"],\n            [0x600fe000, 0x60100000, \"MEM_INTERNAL2\"],\n        ];\n        this.UF2_FAMILY_ID = 0x77d850c4;\n        this.EFUSE_MAX_KEY = 5;\n        this.KEY_PURPOSES = {\n            0: \"USER/EMPTY\",\n            1: \"ECDSA_KEY\",\n            2: \"XTS_AES_256_KEY_1\",\n            3: \"XTS_AES_256_KEY_2\",\n            4: \"XTS_AES_128_KEY\",\n            5: \"HMAC_DOWN_ALL\",\n            6: \"HMAC_DOWN_JTAG\",\n            7: \"HMAC_DOWN_DIGITAL_SIGNATURE\",\n            8: \"HMAC_UP\",\n            9: \"SECURE_BOOT_DIGEST0\",\n            10: \"SECURE_BOOT_DIGEST1\",\n            11: \"SECURE_BOOT_DIGEST2\",\n            12: \"KM_INIT_KEY\",\n            13: \"XTS_AES_256_KEY_1_PSRAM\",\n            14: \"XTS_AES_256_KEY_2_PSRAM\",\n            15: \"XTS_AES_128_KEY_PSRAM\",\n        };\n    }\n    async getPkgVersion(loader) {\n        const numWord = 2;\n        return ((await loader.readReg(this.EFUSE_BLOCK1_ADDR + 4 * numWord)) >> 26) & 0x07;\n    }\n    async getMinorChipVersion(loader) {\n        const numWord = 2;\n        return ((await loader.readReg(this.EFUSE_BLOCK1_ADDR + 4 * numWord)) >> 0) & 0x0f;\n    }\n    async getMajorChipVersion(loader) {\n        const numWord = 2;\n        return ((await loader.readReg(this.EFUSE_BLOCK1_ADDR + 4 * numWord)) >> 4) & 0x03;\n    }\n    async getChipDescription(loader) {\n        const pkgVer = await this.getPkgVersion(loader);\n        let desc;\n        if (pkgVer === 0) {\n            desc = \"ESP32-C61\";\n        }\n        else {\n            desc = \"unknown ESP32-C61\";\n        }\n        const majorRev = await this.getMajorChipVersion(loader);\n        const minorRev = await this.getMinorChipVersion(loader);\n        return `${desc} (revision v${majorRev}.${minorRev})`;\n    }\n    async getChipFeatures(loader) {\n        return [\"WiFi 6\", \"BT 5\"];\n    }\n    async readMac(loader) {\n        let mac0 = await loader.readReg(this.MAC_EFUSE_REG);\n        mac0 = mac0 >>> 0;\n        let mac1 = await loader.readReg(this.MAC_EFUSE_REG + 4);\n        mac1 = (mac1 >>> 0) & 0x0000ffff;\n        const mac = new Uint8Array(6);\n        mac[0] = (mac1 >> 8) & 0xff;\n        mac[1] = mac1 & 0xff;\n        mac[2] = (mac0 >> 24) & 0xff;\n        mac[3] = (mac0 >> 16) & 0xff;\n        mac[4] = (mac0 >> 8) & 0xff;\n        mac[5] = mac0 & 0xff;\n        return (this._d2h(mac[0]) +\n            \":\" +\n            this._d2h(mac[1]) +\n            \":\" +\n            this._d2h(mac[2]) +\n            \":\" +\n            this._d2h(mac[3]) +\n            \":\" +\n            this._d2h(mac[4]) +\n            \":\" +\n            this._d2h(mac[5]));\n    }\n}\n"],"names":["ESP32C61ROM","ESP32C6ROM","constructor","super","arguments","this","CHIP_NAME","IMAGE_CHIP_ID","CHIP_DETECT_MAGIC_VALUE","UART_DATE_REG_ADDR","EFUSE_BASE","EFUSE_BLOCK1_ADDR","MAC_EFUSE_REG","EFUSE_RD_REG_BASE","EFUSE_PURPOSE_KEY0_REG","EFUSE_PURPOSE_KEY0_SHIFT","EFUSE_PURPOSE_KEY1_REG","EFUSE_PURPOSE_KEY1_SHIFT","EFUSE_PURPOSE_KEY2_REG","EFUSE_PURPOSE_KEY2_SHIFT","EFUSE_PURPOSE_KEY3_REG","EFUSE_PURPOSE_KEY3_SHIFT","EFUSE_PURPOSE_KEY4_REG","EFUSE_PURPOSE_KEY4_SHIFT","EFUSE_PURPOSE_KEY5_REG","EFUSE_PURPOSE_KEY5_SHIFT","EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_REG","EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT","EFUSE_SPI_BOOT_CRYPT_CNT_REG","EFUSE_SPI_BOOT_CRYPT_CNT_MASK","EFUSE_SECURE_BOOT_EN_REG","EFUSE_SECURE_BOOT_EN_MASK","FLASH_FREQUENCY","MEMORY_MAP","UF2_FAMILY_ID","EFUSE_MAX_KEY","KEY_PURPOSES","getPkgVersion","loader","readReg","getMinorChipVersion","getMajorChipVersion","getChipDescription","desc","getChipFeatures","readMac","mac0","mac1","mac","Uint8Array","_d2h"],"mappings":"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","x_google_ignoreList":[0]}