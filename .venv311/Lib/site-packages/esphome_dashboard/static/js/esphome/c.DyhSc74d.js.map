{"version":3,"file":"c.DyhSc74d.js","sources":["../../../../node_modules/blocking-elements/dist/blocking-elements.js","../../../../node_modules/wicg-inert/dist/inert.esm.js","../../../../node_modules/@material/dialog/constants.js","../../../../node_modules/@material/dialog/foundation.js","../../../../node_modules/@material/animation/animationframe.js","../../../../node_modules/@material/dom/events.js","../../../../node_modules/@material/mwc-dialog/mwc-dialog-base.js","../../../../node_modules/@material/mwc-dialog/mwc-dialog.css.js","../../../../node_modules/@material/mwc-dialog/mwc-dialog.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(() => {\n    var _a, _b, _c;\n    /* Symbols for private properties */\n    const _blockingElements = Symbol();\n    const _alreadyInertElements = Symbol();\n    const _topElParents = Symbol();\n    const _siblingsToRestore = Symbol();\n    const _parentMO = Symbol();\n    /* Symbols for private static methods */\n    const _topChanged = Symbol();\n    const _swapInertedSibling = Symbol();\n    const _inertSiblings = Symbol();\n    const _restoreInertedSiblings = Symbol();\n    const _getParents = Symbol();\n    const _getDistributedChildren = Symbol();\n    const _isInertable = Symbol();\n    const _handleMutations = Symbol();\n    class BlockingElementsImpl {\n        constructor() {\n            /**\n             * The blocking elements.\n             */\n            this[_a] = [];\n            /**\n             * Used to keep track of the parents of the top element, from the element\n             * itself up to body. When top changes, the old top might have been removed\n             * from the document, so we need to memoize the inerted parents' siblings\n             * in order to restore their inerteness when top changes.\n             */\n            this[_b] = [];\n            /**\n             * Elements that are already inert before the first blocking element is\n             * pushed.\n             */\n            this[_c] = new Set();\n        }\n        destructor() {\n            // Restore original inertness.\n            this[_restoreInertedSiblings](this[_topElParents]);\n            // Note we don't want to make these properties nullable on the class,\n            // since then we'd need non-null casts in many places. Calling a method on\n            // a BlockingElements instance after calling destructor will result in an\n            // exception.\n            const nullable = this;\n            nullable[_blockingElements] = null;\n            nullable[_topElParents] = null;\n            nullable[_alreadyInertElements] = null;\n        }\n        get top() {\n            const elems = this[_blockingElements];\n            return elems[elems.length - 1] || null;\n        }\n        push(element) {\n            if (!element || element === this.top) {\n                return;\n            }\n            // Remove it from the stack, we'll bring it to the top.\n            this.remove(element);\n            this[_topChanged](element);\n            this[_blockingElements].push(element);\n        }\n        remove(element) {\n            const i = this[_blockingElements].indexOf(element);\n            if (i === -1) {\n                return false;\n            }\n            this[_blockingElements].splice(i, 1);\n            // Top changed only if the removed element was the top element.\n            if (i === this[_blockingElements].length) {\n                this[_topChanged](this.top);\n            }\n            return true;\n        }\n        pop() {\n            const top = this.top;\n            top && this.remove(top);\n            return top;\n        }\n        has(element) {\n            return this[_blockingElements].indexOf(element) !== -1;\n        }\n        /**\n         * Sets `inert` to all document elements except the new top element, its\n         * parents, and its distributed content.\n         */\n        [(_a = _blockingElements, _b = _topElParents, _c = _alreadyInertElements, _topChanged)](newTop) {\n            const toKeepInert = this[_alreadyInertElements];\n            const oldParents = this[_topElParents];\n            // No new top, reset old top if any.\n            if (!newTop) {\n                this[_restoreInertedSiblings](oldParents);\n                toKeepInert.clear();\n                this[_topElParents] = [];\n                return;\n            }\n            const newParents = this[_getParents](newTop);\n            // New top is not contained in the main document!\n            if (newParents[newParents.length - 1].parentNode !== document.body) {\n                throw Error('Non-connected element cannot be a blocking element');\n            }\n            // Cast here because we know we'll call _inertSiblings on newParents\n            // below.\n            this[_topElParents] = newParents;\n            const toSkip = this[_getDistributedChildren](newTop);\n            // No previous top element.\n            if (!oldParents.length) {\n                this[_inertSiblings](newParents, toSkip, toKeepInert);\n                return;\n            }\n            let i = oldParents.length - 1;\n            let j = newParents.length - 1;\n            // Find common parent. Index 0 is the element itself (so stop before it).\n            while (i > 0 && j > 0 && oldParents[i] === newParents[j]) {\n                i--;\n                j--;\n            }\n            // If up the parents tree there are 2 elements that are siblings, swap\n            // the inerted sibling.\n            if (oldParents[i] !== newParents[j]) {\n                this[_swapInertedSibling](oldParents[i], newParents[j]);\n            }\n            // Restore old parents siblings inertness.\n            i > 0 && this[_restoreInertedSiblings](oldParents.slice(0, i));\n            // Make new parents siblings inert.\n            j > 0 && this[_inertSiblings](newParents.slice(0, j), toSkip, null);\n        }\n        /**\n         * Swaps inertness between two sibling elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_swapInertedSibling](oldInert, newInert) {\n            const siblingsToRestore = oldInert[_siblingsToRestore];\n            // oldInert is not contained in siblings to restore, so we have to check\n            // if it's inertable and if already inert.\n            if (this[_isInertable](oldInert) && !oldInert.inert) {\n                oldInert.inert = true;\n                siblingsToRestore.add(oldInert);\n            }\n            // If newInert was already between the siblings to restore, it means it is\n            // inertable and must be restored.\n            if (siblingsToRestore.has(newInert)) {\n                newInert.inert = false;\n                siblingsToRestore.delete(newInert);\n            }\n            newInert[_parentMO] = oldInert[_parentMO];\n            newInert[_siblingsToRestore] = siblingsToRestore;\n            oldInert[_parentMO] = undefined;\n            oldInert[_siblingsToRestore] = undefined;\n        }\n        /**\n         * Restores original inertness to the siblings of the elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_restoreInertedSiblings](elements) {\n            for (const element of elements) {\n                const mo = element[_parentMO];\n                mo.disconnect();\n                element[_parentMO] = undefined;\n                const siblings = element[_siblingsToRestore];\n                for (const sibling of siblings) {\n                    sibling.inert = false;\n                }\n                element[_siblingsToRestore] = undefined;\n            }\n        }\n        /**\n         * Inerts the siblings of the elements except the elements to skip. Stores\n         * the inerted siblings into the element's symbol `_siblingsToRestore`.\n         * Pass `toKeepInert` to collect the already inert elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_inertSiblings](elements, toSkip, toKeepInert) {\n            for (const element of elements) {\n                // Assume element is not a Document, so it must have a parentNode.\n                const parent = element.parentNode;\n                const children = parent.children;\n                const inertedSiblings = new Set();\n                for (let j = 0; j < children.length; j++) {\n                    const sibling = children[j];\n                    // Skip the input element, if not inertable or to be skipped.\n                    if (sibling === element || !this[_isInertable](sibling) ||\n                        (toSkip && toSkip.has(sibling))) {\n                        continue;\n                    }\n                    // Should be collected since already inerted.\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n                // Store the siblings that were inerted.\n                element[_siblingsToRestore] = inertedSiblings;\n                // Observe only immediate children mutations on the parent.\n                const mo = new MutationObserver(this[_handleMutations].bind(this));\n                element[_parentMO] = mo;\n                let parentToObserve = parent;\n                // If we're using the ShadyDOM polyfill, then our parent could be a\n                // shady root, which is an object that acts like a ShadowRoot, but isn't\n                // actually a node in the real DOM. Observe the real DOM parent instead.\n                const maybeShadyRoot = parentToObserve;\n                if (maybeShadyRoot.__shady && maybeShadyRoot.host) {\n                    parentToObserve = maybeShadyRoot.host;\n                }\n                mo.observe(parentToObserve, {\n                    childList: true,\n                });\n            }\n        }\n        /**\n         * Handles newly added/removed nodes by toggling their inertness.\n         * It also checks if the current top Blocking Element has been removed,\n         * notifying and removing it.\n         */\n        [_handleMutations](mutations) {\n            const parents = this[_topElParents];\n            const toKeepInert = this[_alreadyInertElements];\n            for (const mutation of mutations) {\n                // If the target is a shadowRoot, get its host as we skip shadowRoots when\n                // computing _topElParents.\n                const target = mutation.target.host || mutation.target;\n                const idx = target === document.body ?\n                    parents.length :\n                    parents.indexOf(target);\n                const inertedChild = parents[idx - 1];\n                const inertedSiblings = inertedChild[_siblingsToRestore];\n                // To restore.\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const sibling = mutation.removedNodes[i];\n                    if (sibling === inertedChild) {\n                        console.info('Detected removal of the top Blocking Element.');\n                        this.pop();\n                        return;\n                    }\n                    if (inertedSiblings.has(sibling)) {\n                        sibling.inert = false;\n                        inertedSiblings.delete(sibling);\n                    }\n                }\n                // To inert.\n                for (let i = 0; i < mutation.addedNodes.length; i++) {\n                    const sibling = mutation.addedNodes[i];\n                    if (!this[_isInertable](sibling)) {\n                        continue;\n                    }\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n            }\n        }\n        /**\n         * Returns if the element is inertable.\n         */\n        [_isInertable](element) {\n            return false === /^(style|template|script)$/.test(element.localName);\n        }\n        /**\n         * Returns the list of newParents of an element, starting from element\n         * (included) up to `document.body` (excluded).\n         */\n        [_getParents](element) {\n            const parents = [];\n            let current = element;\n            // Stop to body.\n            while (current && current !== document.body) {\n                // Skip shadow roots.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    parents.push(current);\n                }\n                // ShadowDom v1\n                if (current.assignedSlot) {\n                    // Collect slots from deepest slot to top.\n                    while (current = current.assignedSlot) {\n                        parents.push(current);\n                    }\n                    // Continue the search on the top slot.\n                    current = parents.pop();\n                    continue;\n                }\n                current = current.parentNode ||\n                    current.host;\n            }\n            return parents;\n        }\n        /**\n         * Returns the distributed children of the element's shadow root.\n         * Returns null if the element doesn't have a shadow root.\n         */\n        [_getDistributedChildren](element) {\n            const shadowRoot = element.shadowRoot;\n            if (!shadowRoot) {\n                return null;\n            }\n            const result = new Set();\n            let i;\n            let j;\n            let nodes;\n            const slots = shadowRoot.querySelectorAll('slot');\n            if (slots.length && slots[0].assignedNodes) {\n                for (i = 0; i < slots.length; i++) {\n                    nodes = slots[i].assignedNodes({\n                        flatten: true,\n                    });\n                    for (j = 0; j < nodes.length; j++) {\n                        if (nodes[j].nodeType === Node.ELEMENT_NODE) {\n                            result.add(nodes[j]);\n                        }\n                    }\n                }\n                // No need to search for <content>.\n            }\n            return result;\n        }\n    }\n    document.$blockingElements =\n        new BlockingElementsImpl();\n})();\n//# sourceMappingURL=blocking-elements.js.map","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This work is licensed under the W3C Software and Document License\n * (http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document).\n */\n\n(function () {\n  // Return early if we're not running inside of the browser.\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Convenience function for converting NodeLists.\n  /** @type {typeof Array.prototype.slice} */\n  var slice = Array.prototype.slice;\n\n  /**\n   * IE has a non-standard name for \"matches\".\n   * @type {typeof Element.prototype.matches}\n   */\n  var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n  /** @type {string} */\n  var _focusableElementsString = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'details', 'summary', 'iframe', 'object', 'embed', '[contenteditable]'].join(',');\n\n  /**\n   * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n   * attribute.\n   *\n   * Its main functions are:\n   *\n   * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n   *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n   *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n   *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n   *   instance exists for each focusable node which has at least one inert root as an ancestor.\n   *\n   * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n   *   attribute is removed from the root node). This is handled in the destructor, which calls the\n   *   `deregister` method on `InertManager` for each managed inert node.\n   */\n\n  var InertRoot = function () {\n    /**\n     * @param {!HTMLElement} rootElement The HTMLElement at the root of the inert subtree.\n     * @param {!InertManager} inertManager The global singleton InertManager object.\n     */\n    function InertRoot(rootElement, inertManager) {\n      _classCallCheck(this, InertRoot);\n\n      /** @type {!InertManager} */\n      this._inertManager = inertManager;\n\n      /** @type {!HTMLElement} */\n      this._rootElement = rootElement;\n\n      /**\n       * @type {!Set<!InertNode>}\n       * All managed focusable nodes in this InertRoot's subtree.\n       */\n      this._managedNodes = new Set();\n\n      // Make the subtree hidden from assistive technology\n      if (this._rootElement.hasAttribute('aria-hidden')) {\n        /** @type {?string} */\n        this._savedAriaHidden = this._rootElement.getAttribute('aria-hidden');\n      } else {\n        this._savedAriaHidden = null;\n      }\n      this._rootElement.setAttribute('aria-hidden', 'true');\n\n      // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n      this._makeSubtreeUnfocusable(this._rootElement);\n\n      // Watch for:\n      // - any additions in the subtree: make them unfocusable too\n      // - any removals from the subtree: remove them from this inert root's managed nodes\n      // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable\n      //   element, make that node a managed node.\n      this._observer = new MutationObserver(this._onMutation.bind(this));\n      this._observer.observe(this._rootElement, { attributes: true, childList: true, subtree: true });\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n     * stored in this object and updates the state of all of the managed nodes.\n     */\n\n\n    _createClass(InertRoot, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._observer.disconnect();\n\n        if (this._rootElement) {\n          if (this._savedAriaHidden !== null) {\n            this._rootElement.setAttribute('aria-hidden', this._savedAriaHidden);\n          } else {\n            this._rootElement.removeAttribute('aria-hidden');\n          }\n        }\n\n        this._managedNodes.forEach(function (inertNode) {\n          this._unmanageNode(inertNode.node);\n        }, this);\n\n        // Note we cast the nulls to the ANY type here because:\n        // 1) We want the class properties to be declared as non-null, or else we\n        //    need even more casts throughout this code. All bets are off if an\n        //    instance has been destroyed and a method is called.\n        // 2) We don't want to cast \"this\", because we want type-aware optimizations\n        //    to know which properties we're setting.\n        this._observer = /** @type {?} */null;\n        this._rootElement = /** @type {?} */null;\n        this._managedNodes = /** @type {?} */null;\n        this._inertManager = /** @type {?} */null;\n      }\n\n      /**\n       * @return {!Set<!InertNode>} A copy of this InertRoot's managed nodes set.\n       */\n\n    }, {\n      key: '_makeSubtreeUnfocusable',\n\n\n      /**\n       * @param {!Node} startNode\n       */\n      value: function _makeSubtreeUnfocusable(startNode) {\n        var _this2 = this;\n\n        composedTreeWalk(startNode, function (node) {\n          return _this2._visitNode(node);\n        });\n\n        var activeElement = document.activeElement;\n\n        if (!document.body.contains(startNode)) {\n          // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n          var node = startNode;\n          /** @type {!ShadowRoot|undefined} */\n          var root = undefined;\n          while (node) {\n            if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n              root = /** @type {!ShadowRoot} */node;\n              break;\n            }\n            node = node.parentNode;\n          }\n          if (root) {\n            activeElement = root.activeElement;\n          }\n        }\n        if (startNode.contains(activeElement)) {\n          activeElement.blur();\n          // In IE11, if an element is already focused, and then set to tabindex=-1\n          // calling blur() will not actually move the focus.\n          // To work around this we call focus() on the body instead.\n          if (activeElement === document.activeElement) {\n            document.body.focus();\n          }\n        }\n      }\n\n      /**\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_visitNode',\n      value: function _visitNode(node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!HTMLElement} */node;\n\n        // If a descendant inert root becomes un-inert, its descendants will still be inert because of\n        // this inert root, so all of its managed nodes need to be adopted by this InertRoot.\n        if (element !== this._rootElement && element.hasAttribute('inert')) {\n          this._adoptInertRoot(element);\n        }\n\n        if (matches.call(element, _focusableElementsString) || element.hasAttribute('tabindex')) {\n          this._manageNode(element);\n        }\n      }\n\n      /**\n       * Register the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_manageNode',\n      value: function _manageNode(node) {\n        var inertNode = this._inertManager.register(node, this);\n        this._managedNodes.add(inertNode);\n      }\n\n      /**\n       * Unregister the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_unmanageNode',\n      value: function _unmanageNode(node) {\n        var inertNode = this._inertManager.deregister(node, this);\n        if (inertNode) {\n          this._managedNodes['delete'](inertNode);\n        }\n      }\n\n      /**\n       * Unregister the entire subtree starting at `startNode`.\n       * @param {!Node} startNode\n       */\n\n    }, {\n      key: '_unmanageSubtree',\n      value: function _unmanageSubtree(startNode) {\n        var _this3 = this;\n\n        composedTreeWalk(startNode, function (node) {\n          return _this3._unmanageNode(node);\n        });\n      }\n\n      /**\n       * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n       * @param {!HTMLElement} node\n       */\n\n    }, {\n      key: '_adoptInertRoot',\n      value: function _adoptInertRoot(node) {\n        var inertSubroot = this._inertManager.getInertRoot(node);\n\n        // During initialisation this inert root may not have been registered yet,\n        // so register it now if need be.\n        if (!inertSubroot) {\n          this._inertManager.setInert(node, true);\n          inertSubroot = this._inertManager.getInertRoot(node);\n        }\n\n        inertSubroot.managedNodes.forEach(function (savedInertNode) {\n          this._manageNode(savedInertNode.node);\n        }, this);\n      }\n\n      /**\n       * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n\n    }, {\n      key: '_onMutation',\n      value: function _onMutation(records, self) {\n        records.forEach(function (record) {\n          var target = /** @type {!HTMLElement} */record.target;\n          if (record.type === 'childList') {\n            // Manage added nodes\n            slice.call(record.addedNodes).forEach(function (node) {\n              this._makeSubtreeUnfocusable(node);\n            }, this);\n\n            // Un-manage removed nodes\n            slice.call(record.removedNodes).forEach(function (node) {\n              this._unmanageSubtree(node);\n            }, this);\n          } else if (record.type === 'attributes') {\n            if (record.attributeName === 'tabindex') {\n              // Re-initialise inert node if tabindex changes\n              this._manageNode(target);\n            } else if (target !== this._rootElement && record.attributeName === 'inert' && target.hasAttribute('inert')) {\n              // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n              // already managed nodes from this inert subroot.\n              this._adoptInertRoot(target);\n              var inertSubroot = this._inertManager.getInertRoot(target);\n              this._managedNodes.forEach(function (managedNode) {\n                if (target.contains(managedNode.node)) {\n                  inertSubroot._manageNode(managedNode.node);\n                }\n              });\n            }\n          }\n        }, this);\n      }\n    }, {\n      key: 'managedNodes',\n      get: function get() {\n        return new Set(this._managedNodes);\n      }\n\n      /** @return {boolean} */\n\n    }, {\n      key: 'hasSavedAriaHidden',\n      get: function get() {\n        return this._savedAriaHidden !== null;\n      }\n\n      /** @param {?string} ariaHidden */\n\n    }, {\n      key: 'savedAriaHidden',\n      set: function set(ariaHidden) {\n        this._savedAriaHidden = ariaHidden;\n      }\n\n      /** @return {?string} */\n      ,\n      get: function get() {\n        return this._savedAriaHidden;\n      }\n    }]);\n\n    return InertRoot;\n  }();\n\n  /**\n   * `InertNode` initialises and manages a single inert node.\n   * A node is inert if it is a descendant of one or more inert root elements.\n   *\n   * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n   * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n   * is intrinsically focusable or not.\n   *\n   * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n   * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n   * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n   * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n   * or removes the `tabindex` attribute if the element is intrinsically focusable.\n   */\n\n\n  var InertNode = function () {\n    /**\n     * @param {!Node} node A focusable element to be made inert.\n     * @param {!InertRoot} inertRoot The inert root element associated with this inert node.\n     */\n    function InertNode(node, inertRoot) {\n      _classCallCheck(this, InertNode);\n\n      /** @type {!Node} */\n      this._node = node;\n\n      /** @type {boolean} */\n      this._overrodeFocusMethod = false;\n\n      /**\n       * @type {!Set<!InertRoot>} The set of descendant inert roots.\n       *    If and only if this set becomes empty, this node is no longer inert.\n       */\n      this._inertRoots = new Set([inertRoot]);\n\n      /** @type {?number} */\n      this._savedTabIndex = null;\n\n      /** @type {boolean} */\n      this._destroyed = false;\n\n      // Save any prior tabindex info and make this node untabbable\n      this.ensureUntabbable();\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.\n     * This makes the managed node focusable again and deletes all of the previously stored state.\n     */\n\n\n    _createClass(InertNode, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._throwIfDestroyed();\n\n        if (this._node && this._node.nodeType === Node.ELEMENT_NODE) {\n          var element = /** @type {!HTMLElement} */this._node;\n          if (this._savedTabIndex !== null) {\n            element.setAttribute('tabindex', this._savedTabIndex);\n          } else {\n            element.removeAttribute('tabindex');\n          }\n\n          // Use `delete` to restore native focus method.\n          if (this._overrodeFocusMethod) {\n            delete element.focus;\n          }\n        }\n\n        // See note in InertRoot.destructor for why we cast these nulls to ANY.\n        this._node = /** @type {?} */null;\n        this._inertRoots = /** @type {?} */null;\n        this._destroyed = true;\n      }\n\n      /**\n       * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n       * If the object has been destroyed, any attempt to access it will cause an exception.\n       */\n\n    }, {\n      key: '_throwIfDestroyed',\n\n\n      /**\n       * Throw if user tries to access destroyed InertNode.\n       */\n      value: function _throwIfDestroyed() {\n        if (this.destroyed) {\n          throw new Error('Trying to access destroyed InertNode');\n        }\n      }\n\n      /** @return {boolean} */\n\n    }, {\n      key: 'ensureUntabbable',\n\n\n      /** Save the existing tabindex value and make the node untabbable and unfocusable */\n      value: function ensureUntabbable() {\n        if (this.node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!HTMLElement} */this.node;\n        if (matches.call(element, _focusableElementsString)) {\n          if ( /** @type {!HTMLElement} */element.tabIndex === -1 && this.hasSavedTabIndex) {\n            return;\n          }\n\n          if (element.hasAttribute('tabindex')) {\n            this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          }\n          element.setAttribute('tabindex', '-1');\n          if (element.nodeType === Node.ELEMENT_NODE) {\n            element.focus = function () {};\n            this._overrodeFocusMethod = true;\n          }\n        } else if (element.hasAttribute('tabindex')) {\n          this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          element.removeAttribute('tabindex');\n        }\n      }\n\n      /**\n       * Add another inert root to this inert node's set of managing inert roots.\n       * @param {!InertRoot} inertRoot\n       */\n\n    }, {\n      key: 'addInertRoot',\n      value: function addInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots.add(inertRoot);\n      }\n\n      /**\n       * Remove the given inert root from this inert node's set of managing inert roots.\n       * If the set of managing inert roots becomes empty, this node is no longer inert,\n       * so the object should be destroyed.\n       * @param {!InertRoot} inertRoot\n       */\n\n    }, {\n      key: 'removeInertRoot',\n      value: function removeInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots['delete'](inertRoot);\n        if (this._inertRoots.size === 0) {\n          this.destructor();\n        }\n      }\n    }, {\n      key: 'destroyed',\n      get: function get() {\n        return (/** @type {!InertNode} */this._destroyed\n        );\n      }\n    }, {\n      key: 'hasSavedTabIndex',\n      get: function get() {\n        return this._savedTabIndex !== null;\n      }\n\n      /** @return {!Node} */\n\n    }, {\n      key: 'node',\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._node;\n      }\n\n      /** @param {?number} tabIndex */\n\n    }, {\n      key: 'savedTabIndex',\n      set: function set(tabIndex) {\n        this._throwIfDestroyed();\n        this._savedTabIndex = tabIndex;\n      }\n\n      /** @return {?number} */\n      ,\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._savedTabIndex;\n      }\n    }]);\n\n    return InertNode;\n  }();\n\n  /**\n   * InertManager is a per-document singleton object which manages all inert roots and nodes.\n   *\n   * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n   * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n   * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n   * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n   * is created for each such node, via the `_managedNodes` map.\n   */\n\n\n  var InertManager = function () {\n    /**\n     * @param {!Document} document\n     */\n    function InertManager(document) {\n      _classCallCheck(this, InertManager);\n\n      if (!document) {\n        throw new Error('Missing required argument; InertManager needs to wrap a document.');\n      }\n\n      /** @type {!Document} */\n      this._document = document;\n\n      /**\n       * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertNode>}\n       */\n      this._managedNodes = new Map();\n\n      /**\n       * All inert roots known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertRoot>}\n       */\n      this._inertRoots = new Map();\n\n      /**\n       * Observer for mutations on `document.body`.\n       * @type {!MutationObserver}\n       */\n      this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n      // Add inert style.\n      addInertStyle(document.head || document.body || document.documentElement);\n\n      // Wait for document to be loaded.\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n      } else {\n        this._onDocumentLoaded();\n      }\n    }\n\n    /**\n     * Set whether the given element should be an inert root or not.\n     * @param {!HTMLElement} root\n     * @param {boolean} inert\n     */\n\n\n    _createClass(InertManager, [{\n      key: 'setInert',\n      value: function setInert(root, inert) {\n        if (inert) {\n          if (this._inertRoots.has(root)) {\n            // element is already inert\n            return;\n          }\n\n          var inertRoot = new InertRoot(root, this);\n          root.setAttribute('inert', '');\n          this._inertRoots.set(root, inertRoot);\n          // If not contained in the document, it must be in a shadowRoot.\n          // Ensure inert styles are added there.\n          if (!this._document.body.contains(root)) {\n            var parent = root.parentNode;\n            while (parent) {\n              if (parent.nodeType === 11) {\n                addInertStyle(parent);\n              }\n              parent = parent.parentNode;\n            }\n          }\n        } else {\n          if (!this._inertRoots.has(root)) {\n            // element is already non-inert\n            return;\n          }\n\n          var _inertRoot = this._inertRoots.get(root);\n          _inertRoot.destructor();\n          this._inertRoots['delete'](root);\n          root.removeAttribute('inert');\n        }\n      }\n\n      /**\n       * Get the InertRoot object corresponding to the given inert root element, if any.\n       * @param {!Node} element\n       * @return {!InertRoot|undefined}\n       */\n\n    }, {\n      key: 'getInertRoot',\n      value: function getInertRoot(element) {\n        return this._inertRoots.get(element);\n      }\n\n      /**\n       * Register the given InertRoot as managing the given node.\n       * In the case where the node has a previously existing inert root, this inert root will\n       * be added to its set of inert roots.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {!InertNode} inertNode\n       */\n\n    }, {\n      key: 'register',\n      value: function register(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (inertNode !== undefined) {\n          // node was already in an inert subtree\n          inertNode.addInertRoot(inertRoot);\n        } else {\n          inertNode = new InertNode(node, inertRoot);\n        }\n\n        this._managedNodes.set(node, inertNode);\n\n        return inertNode;\n      }\n\n      /**\n       * De-register the given InertRoot as managing the given inert node.\n       * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n       * node from the InertManager's set of managed nodes if it is destroyed.\n       * If the node is not currently managed, this is essentially a no-op.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {?InertNode} The potentially destroyed InertNode associated with this node, if any.\n       */\n\n    }, {\n      key: 'deregister',\n      value: function deregister(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (!inertNode) {\n          return null;\n        }\n\n        inertNode.removeInertRoot(inertRoot);\n        if (inertNode.destroyed) {\n          this._managedNodes['delete'](node);\n        }\n\n        return inertNode;\n      }\n\n      /**\n       * Callback used when document has finished loading.\n       */\n\n    }, {\n      key: '_onDocumentLoaded',\n      value: function _onDocumentLoaded() {\n        // Find all inert roots in document and make them actually inert.\n        var inertElements = slice.call(this._document.querySelectorAll('[inert]'));\n        inertElements.forEach(function (inertElement) {\n          this.setInert(inertElement, true);\n        }, this);\n\n        // Comment this out to use programmatic API only.\n        this._observer.observe(this._document.body || this._document.documentElement, { attributes: true, subtree: true, childList: true });\n      }\n\n      /**\n       * Callback used when mutation observer detects attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n\n    }, {\n      key: '_watchForInert',\n      value: function _watchForInert(records, self) {\n        var _this = this;\n        records.forEach(function (record) {\n          switch (record.type) {\n            case 'childList':\n              slice.call(record.addedNodes).forEach(function (node) {\n                if (node.nodeType !== Node.ELEMENT_NODE) {\n                  return;\n                }\n                var inertElements = slice.call(node.querySelectorAll('[inert]'));\n                if (matches.call(node, '[inert]')) {\n                  inertElements.unshift(node);\n                }\n                inertElements.forEach(function (inertElement) {\n                  this.setInert(inertElement, true);\n                }, _this);\n              }, _this);\n              break;\n            case 'attributes':\n              if (record.attributeName !== 'inert') {\n                return;\n              }\n              var target = /** @type {!HTMLElement} */record.target;\n              var inert = target.hasAttribute('inert');\n              _this.setInert(target, inert);\n              break;\n          }\n        }, this);\n      }\n    }]);\n\n    return InertManager;\n  }();\n\n  /**\n   * Recursively walk the composed tree from |node|.\n   * @param {!Node} node\n   * @param {(function (!HTMLElement))=} callback Callback to be called for each element traversed,\n   *     before descending into child nodes.\n   * @param {?ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n   */\n\n\n  function composedTreeWalk(node, callback, shadowRootAncestor) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      var element = /** @type {!HTMLElement} */node;\n      if (callback) {\n        callback(element);\n      }\n\n      // Descend into node:\n      // If it has a ShadowRoot, ignore all child elements - these will be picked\n      // up by the <content> or <shadow> elements. Descend straight into the\n      // ShadowRoot.\n      var shadowRoot = /** @type {!HTMLElement} */element.shadowRoot;\n      if (shadowRoot) {\n        composedTreeWalk(shadowRoot, callback, shadowRoot);\n        return;\n      }\n\n      // If it is a <content> element, descend into distributed elements - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'content') {\n        var content = /** @type {!HTMLContentElement} */element;\n        // Verifies if ShadowDom v0 is supported.\n        var distributedNodes = content.getDistributedNodes ? content.getDistributedNodes() : [];\n        for (var i = 0; i < distributedNodes.length; i++) {\n          composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n\n      // If it is a <slot> element, descend into assigned nodes - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'slot') {\n        var slot = /** @type {!HTMLSlotElement} */element;\n        // Verify if ShadowDom v1 is supported.\n        var _distributedNodes = slot.assignedNodes ? slot.assignedNodes({ flatten: true }) : [];\n        for (var _i = 0; _i < _distributedNodes.length; _i++) {\n          composedTreeWalk(_distributedNodes[_i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n    }\n\n    // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n    // element, nor a <shadow> element recurse normally.\n    var child = node.firstChild;\n    while (child != null) {\n      composedTreeWalk(child, callback, shadowRootAncestor);\n      child = child.nextSibling;\n    }\n  }\n\n  /**\n   * Adds a style element to the node containing the inert specific styles\n   * @param {!Node} node\n   */\n  function addInertStyle(node) {\n    if (node.querySelector('style#inert-style, link#inert-style')) {\n      return;\n    }\n    var style = document.createElement('style');\n    style.setAttribute('id', 'inert-style');\n    style.textContent = '\\n' + '[inert] {\\n' + '  pointer-events: none;\\n' + '  cursor: default;\\n' + '}\\n' + '\\n' + '[inert], [inert] * {\\n' + '  -webkit-user-select: none;\\n' + '  -moz-user-select: none;\\n' + '  -ms-user-select: none;\\n' + '  user-select: none;\\n' + '}\\n';\n    node.appendChild(style);\n  }\n\n  if (!HTMLElement.prototype.hasOwnProperty('inert')) {\n    /** @type {!InertManager} */\n    var inertManager = new InertManager(document);\n\n    Object.defineProperty(HTMLElement.prototype, 'inert', {\n      enumerable: true,\n      /** @this {!HTMLElement} */\n      get: function get() {\n        return this.hasAttribute('inert');\n      },\n      /** @this {!HTMLElement} */\n      set: function set(inert) {\n        inertManager.setInert(this, inert);\n      }\n    });\n  }\n})();\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    CLOSING: 'mdc-dialog--closing',\n    OPEN: 'mdc-dialog--open',\n    OPENING: 'mdc-dialog--opening',\n    SCROLLABLE: 'mdc-dialog--scrollable',\n    SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n    STACKED: 'mdc-dialog--stacked',\n    FULLSCREEN: 'mdc-dialog--fullscreen',\n    // Class for showing a scroll divider on full-screen dialog header element.\n    // Should only be displayed on scrollable content, when the dialog content is\n    // scrolled \"underneath\" the header.\n    SCROLL_DIVIDER_HEADER: 'mdc-dialog-scroll-divider-header',\n    // Class for showing a scroll divider on a full-screen dialog footer element.\n    // Should only be displayed on scrolalble content, when the dialog content is\n    // obscured \"underneath\" the footer.\n    SCROLL_DIVIDER_FOOTER: 'mdc-dialog-scroll-divider-footer',\n    // The \"surface scrim\" is a scrim covering only the surface of a dialog. This\n    // is used in situations where a confirmation dialog is shown over an already\n    // opened full-screen dialog. On larger screen-sizes, the full-screen dialog\n    // is sized as a modal and so in these situations we display a \"surface scrim\"\n    // to prevent a \"double scrim\" (where the scrim from the secondary\n    // confirmation dialog would overlap with the scrim from the full-screen\n    // dialog).\n    SURFACE_SCRIM_SHOWN: 'mdc-dialog__surface-scrim--shown',\n    // \"Showing\" animating class for the surface-scrim.\n    SURFACE_SCRIM_SHOWING: 'mdc-dialog__surface-scrim--showing',\n    // \"Hiding\" animating class for the surface-scrim.\n    SURFACE_SCRIM_HIDING: 'mdc-dialog__surface-scrim--hiding',\n    // Class to hide a dialog's scrim (used in conjunction with a surface-scrim).\n    // Note that we only hide the original scrim rather than removing it entirely\n    // to prevent interactions with the content behind this scrim, and to capture\n    // scrim clicks.\n    SCRIM_HIDDEN: 'mdc-dialog__scrim--hidden',\n};\nexport var strings = {\n    ACTION_ATTRIBUTE: 'data-mdc-dialog-action',\n    BUTTON_DEFAULT_ATTRIBUTE: 'data-mdc-dialog-button-default',\n    BUTTON_SELECTOR: '.mdc-dialog__button',\n    CLOSED_EVENT: 'MDCDialog:closed',\n    CLOSE_ACTION: 'close',\n    CLOSING_EVENT: 'MDCDialog:closing',\n    CONTAINER_SELECTOR: '.mdc-dialog__container',\n    CONTENT_SELECTOR: '.mdc-dialog__content',\n    DESTROY_ACTION: 'destroy',\n    INITIAL_FOCUS_ATTRIBUTE: 'data-mdc-dialog-initial-focus',\n    OPENED_EVENT: 'MDCDialog:opened',\n    OPENING_EVENT: 'MDCDialog:opening',\n    SCRIM_SELECTOR: '.mdc-dialog__scrim',\n    SUPPRESS_DEFAULT_PRESS_SELECTOR: [\n        'textarea',\n        '.mdc-menu .mdc-list-item',\n        '.mdc-menu .mdc-deprecated-list-item',\n    ].join(', '),\n    SURFACE_SELECTOR: '.mdc-dialog__surface',\n};\nexport var numbers = {\n    DIALOG_ANIMATION_CLOSE_TIME_MS: 75,\n    DIALOG_ANIMATION_OPEN_TIME_MS: 150,\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { AnimationFrame } from '@material/animation/animationframe';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar AnimationKeys;\n(function (AnimationKeys) {\n    AnimationKeys[\"POLL_SCROLL_POS\"] = \"poll_scroll_position\";\n    AnimationKeys[\"POLL_LAYOUT_CHANGE\"] = \"poll_layout_change\";\n})(AnimationKeys || (AnimationKeys = {}));\nvar MDCDialogFoundation = /** @class */ (function (_super) {\n    __extends(MDCDialogFoundation, _super);\n    function MDCDialogFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n        _this.dialogOpen = false;\n        _this.isFullscreen = false;\n        _this.animationFrame = 0;\n        _this.animationTimer = 0;\n        _this.escapeKeyAction = strings.CLOSE_ACTION;\n        _this.scrimClickAction = strings.CLOSE_ACTION;\n        _this.autoStackButtons = true;\n        _this.areButtonsStacked = false;\n        _this.suppressDefaultPressSelector = strings.SUPPRESS_DEFAULT_PRESS_SELECTOR;\n        _this.animFrame = new AnimationFrame();\n        _this.contentScrollHandler = function () {\n            _this.handleScrollEvent();\n        };\n        _this.windowResizeHandler = function () {\n            _this.layout();\n        };\n        _this.windowOrientationChangeHandler = function () {\n            _this.layout();\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addBodyClass: function () { return undefined; },\n                addClass: function () { return undefined; },\n                areButtonsStacked: function () { return false; },\n                clickDefaultButton: function () { return undefined; },\n                eventTargetMatches: function () { return false; },\n                getActionFromEvent: function () { return ''; },\n                getInitialFocusEl: function () { return null; },\n                hasClass: function () { return false; },\n                isContentScrollable: function () { return false; },\n                notifyClosed: function () { return undefined; },\n                notifyClosing: function () { return undefined; },\n                notifyOpened: function () { return undefined; },\n                notifyOpening: function () { return undefined; },\n                releaseFocus: function () { return undefined; },\n                removeBodyClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                reverseButtons: function () { return undefined; },\n                trapFocus: function () { return undefined; },\n                registerContentEventHandler: function () { return undefined; },\n                deregisterContentEventHandler: function () { return undefined; },\n                isScrollableContentAtTop: function () { return false; },\n                isScrollableContentAtBottom: function () { return false; },\n                registerWindowEventHandler: function () { return undefined; },\n                deregisterWindowEventHandler: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCDialogFoundation.prototype.init = function () {\n        if (this.adapter.hasClass(cssClasses.STACKED)) {\n            this.setAutoStackButtons(false);\n        }\n        this.isFullscreen = this.adapter.hasClass(cssClasses.FULLSCREEN);\n    };\n    MDCDialogFoundation.prototype.destroy = function () {\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.handleAnimationTimerEnd();\n        }\n        if (this.isFullscreen) {\n            this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        this.animFrame.cancelAll();\n        this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    };\n    MDCDialogFoundation.prototype.open = function (dialogOptions) {\n        var _this = this;\n        this.dialogOpen = true;\n        this.adapter.notifyOpening();\n        this.adapter.addClass(cssClasses.OPENING);\n        if (this.isFullscreen) {\n            // A scroll event listener is registered even if the dialog is not\n            // scrollable on open, since the window resize event, or orientation\n            // change may make the dialog scrollable after it is opened.\n            this.adapter.registerContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        if (dialogOptions && dialogOptions.isAboveFullscreenDialog) {\n            this.adapter.addClass(cssClasses.SCRIM_HIDDEN);\n        }\n        this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.registerWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n        // Wait a frame once display is no longer \"none\", to establish basis for\n        // animation\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(cssClasses.OPEN);\n            _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n            _this.layout();\n            _this.animationTimer = setTimeout(function () {\n                _this.handleAnimationTimerEnd();\n                _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n                _this.adapter.notifyOpened();\n            }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n        });\n    };\n    MDCDialogFoundation.prototype.close = function (action) {\n        var _this = this;\n        if (action === void 0) { action = ''; }\n        if (!this.dialogOpen) {\n            // Avoid redundant close calls (and events), e.g. from keydown on elements\n            // that inherently emit click\n            return;\n        }\n        this.dialogOpen = false;\n        this.adapter.notifyClosing(action);\n        this.adapter.addClass(cssClasses.CLOSING);\n        this.adapter.removeClass(cssClasses.OPEN);\n        this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n        if (this.isFullscreen) {\n            this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = 0;\n        clearTimeout(this.animationTimer);\n        this.animationTimer = setTimeout(function () {\n            _this.adapter.releaseFocus();\n            _this.handleAnimationTimerEnd();\n            _this.adapter.notifyClosed(action);\n        }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n    };\n    /**\n     * Used only in instances of showing a secondary dialog over a full-screen\n     * dialog. Shows the \"surface scrim\" displayed over the full-screen dialog.\n     */\n    MDCDialogFoundation.prototype.showSurfaceScrim = function () {\n        var _this = this;\n        this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWING);\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWN);\n        });\n    };\n    /**\n     * Used only in instances of showing a secondary dialog over a full-screen\n     * dialog. Hides the \"surface scrim\" displayed over the full-screen dialog.\n     */\n    MDCDialogFoundation.prototype.hideSurfaceScrim = function () {\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWN);\n        this.adapter.addClass(cssClasses.SURFACE_SCRIM_HIDING);\n    };\n    /**\n     * Handles `transitionend` event triggered when surface scrim animation is\n     * finished.\n     */\n    MDCDialogFoundation.prototype.handleSurfaceScrimTransitionEnd = function () {\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_HIDING);\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWING);\n    };\n    MDCDialogFoundation.prototype.isOpen = function () {\n        return this.dialogOpen;\n    };\n    MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n        return this.escapeKeyAction;\n    };\n    MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n        this.escapeKeyAction = action;\n    };\n    MDCDialogFoundation.prototype.getScrimClickAction = function () {\n        return this.scrimClickAction;\n    };\n    MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n        this.scrimClickAction = action;\n    };\n    MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n        return this.autoStackButtons;\n    };\n    MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n        this.autoStackButtons = autoStack;\n    };\n    MDCDialogFoundation.prototype.getSuppressDefaultPressSelector = function () {\n        return this.suppressDefaultPressSelector;\n    };\n    MDCDialogFoundation.prototype.setSuppressDefaultPressSelector = function (selector) {\n        this.suppressDefaultPressSelector = selector;\n    };\n    MDCDialogFoundation.prototype.layout = function () {\n        var _this = this;\n        this.animFrame.request(AnimationKeys.POLL_LAYOUT_CHANGE, function () {\n            _this.layoutInternal();\n        });\n    };\n    /** Handles click on the dialog root element. */\n    MDCDialogFoundation.prototype.handleClick = function (evt) {\n        var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR);\n        // Check for scrim click first since it doesn't require querying ancestors.\n        if (isScrim && this.scrimClickAction !== '') {\n            this.close(this.scrimClickAction);\n        }\n        else {\n            var action = this.adapter.getActionFromEvent(evt);\n            if (action) {\n                this.close(action);\n            }\n        }\n    };\n    /** Handles keydown on the dialog root element. */\n    MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n        var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n        if (!isEnter) {\n            return;\n        }\n        var action = this.adapter.getActionFromEvent(evt);\n        if (action) {\n            // Action button callback is handled in `handleClick`,\n            // since space/enter keydowns on buttons trigger click events.\n            return;\n        }\n        // `composedPath` is used here, when available, to account for use cases\n        // where a target meant to suppress the default press behaviour\n        // may exist in a shadow root.\n        // For example, a textarea inside a web component:\n        // <mwc-dialog>\n        //   <horizontal-layout>\n        //     #shadow-root (open)\n        //       <mwc-textarea>\n        //         #shadow-root (open)\n        //           <textarea></textarea>\n        //       </mwc-textarea>\n        //   </horizontal-layout>\n        // </mwc-dialog>\n        var target = evt.composedPath ? evt.composedPath()[0] : evt.target;\n        var isDefault = this.suppressDefaultPressSelector ?\n            !this.adapter.eventTargetMatches(target, this.suppressDefaultPressSelector) :\n            true;\n        if (isEnter && isDefault) {\n            this.adapter.clickDefaultButton();\n        }\n    };\n    /** Handles keydown on the document. */\n    MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n        var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n        if (isEscape && this.escapeKeyAction !== '') {\n            this.close(this.escapeKeyAction);\n        }\n    };\n    /**\n     * Handles scroll event on the dialog's content element -- showing a scroll\n     * divider on the header or footer based on the scroll position. This handler\n     * should only be registered on full-screen dialogs with scrollable content.\n     */\n    MDCDialogFoundation.prototype.handleScrollEvent = function () {\n        var _this = this;\n        // Since scroll events can fire at a high rate, we throttle these events by\n        // using requestAnimationFrame.\n        this.animFrame.request(AnimationKeys.POLL_SCROLL_POS, function () {\n            _this.toggleScrollDividerHeader();\n            _this.toggleScrollDividerFooter();\n        });\n    };\n    MDCDialogFoundation.prototype.layoutInternal = function () {\n        if (this.autoStackButtons) {\n            this.detectStackedButtons();\n        }\n        this.toggleScrollableClasses();\n    };\n    MDCDialogFoundation.prototype.handleAnimationTimerEnd = function () {\n        this.animationTimer = 0;\n        this.adapter.removeClass(cssClasses.OPENING);\n        this.adapter.removeClass(cssClasses.CLOSING);\n    };\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to\n     * factor in Firefox reflow behavior.\n     */\n    MDCDialogFoundation.prototype.runNextAnimationFrame = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = requestAnimationFrame(function () {\n            _this.animationFrame = 0;\n            clearTimeout(_this.animationTimer);\n            _this.animationTimer = setTimeout(callback, 0);\n        });\n    };\n    MDCDialogFoundation.prototype.detectStackedButtons = function () {\n        // Remove the class first to let us measure the buttons' natural positions.\n        this.adapter.removeClass(cssClasses.STACKED);\n        var areButtonsStacked = this.adapter.areButtonsStacked();\n        if (areButtonsStacked) {\n            this.adapter.addClass(cssClasses.STACKED);\n        }\n        if (areButtonsStacked !== this.areButtonsStacked) {\n            this.adapter.reverseButtons();\n            this.areButtonsStacked = areButtonsStacked;\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollableClasses = function () {\n        // Remove the class first to let us measure the natural height of the\n        // content.\n        this.adapter.removeClass(cssClasses.SCROLLABLE);\n        if (this.adapter.isContentScrollable()) {\n            this.adapter.addClass(cssClasses.SCROLLABLE);\n            if (this.isFullscreen) {\n                // If dialog is full-screen and scrollable, check if a scroll divider\n                // should be shown.\n                this.toggleScrollDividerHeader();\n                this.toggleScrollDividerFooter();\n            }\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollDividerHeader = function () {\n        if (!this.adapter.isScrollableContentAtTop()) {\n            this.adapter.addClass(cssClasses.SCROLL_DIVIDER_HEADER);\n        }\n        else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_HEADER)) {\n            this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_HEADER);\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollDividerFooter = function () {\n        if (!this.adapter.isScrollableContentAtBottom()) {\n            this.adapter.addClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n        }\n        else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_FOOTER)) {\n            this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n        }\n    };\n    return MDCDialogFoundation;\n}(MDCFoundation));\nexport { MDCDialogFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDialogFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * AnimationFrame provides a user-friendly abstraction around requesting\n * and canceling animation frames.\n */\nvar AnimationFrame = /** @class */ (function () {\n    function AnimationFrame() {\n        this.rafIDs = new Map();\n    }\n    /**\n     * Requests an animation frame. Cancels any existing frame with the same key.\n     * @param {string} key The key for this callback.\n     * @param {FrameRequestCallback} callback The callback to be executed.\n     */\n    AnimationFrame.prototype.request = function (key, callback) {\n        var _this = this;\n        this.cancel(key);\n        var frameID = requestAnimationFrame(function (frame) {\n            _this.rafIDs.delete(key);\n            // Callback must come *after* the key is deleted so that nested calls to\n            // request with the same key are not deleted.\n            callback(frame);\n        });\n        this.rafIDs.set(key, frameID);\n    };\n    /**\n     * Cancels a queued callback with the given key.\n     * @param {string} key The key for this callback.\n     */\n    AnimationFrame.prototype.cancel = function (key) {\n        var rafID = this.rafIDs.get(key);\n        if (rafID) {\n            cancelAnimationFrame(rafID);\n            this.rafIDs.delete(key);\n        }\n    };\n    /**\n     * Cancels all queued callback.\n     */\n    AnimationFrame.prototype.cancelAll = function () {\n        var _this = this;\n        // Need to use forEach because it's the only iteration method supported\n        // by IE11. Suppress the underscore because we don't need it.\n        // tslint:disable-next-line:enforce-name-casing\n        this.rafIDs.forEach(function (_, key) {\n            _this.cancel(key);\n        });\n    };\n    /**\n     * Returns the queue of unexecuted callback keys.\n     */\n    AnimationFrame.prototype.getQueue = function () {\n        var queue = [];\n        // Need to use forEach because it's the only iteration method supported\n        // by IE11. Suppress the underscore because we don't need it.\n        // tslint:disable-next-line:enforce-name-casing\n        this.rafIDs.forEach(function (_, key) {\n            queue.push(key);\n        });\n        return queue;\n    };\n    return AnimationFrame;\n}());\nexport { AnimationFrame };\n//# sourceMappingURL=animationframe.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nexport function applyPassive(globalObj) {\n    if (globalObj === void 0) { globalObj = window; }\n    return supportsPassiveOption(globalObj) ?\n        { passive: true } :\n        false;\n}\nfunction supportsPassiveOption(globalObj) {\n    if (globalObj === void 0) { globalObj = window; }\n    // See\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n    var passiveSupported = false;\n    try {\n        var options = {\n            // This function will be called when the browser\n            // attempts to access the passive property.\n            get passive() {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        var handler = function () { };\n        globalObj.document.addEventListener('test', handler, options);\n        globalObj.document.removeEventListener('test', handler, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n    return passiveSupported;\n}\n//# sourceMappingURL=events.js.map","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport 'blocking-elements';\nimport 'wicg-inert';\nimport { cssClasses } from '@material/dialog/constants.js';\nimport MDCDialogFoundation from '@material/dialog/foundation.js';\nimport { applyPassive } from '@material/dom/events.js';\nimport { closest, matches } from '@material/dom/ponyfill.js';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nconst blockingElements = document.$blockingElements;\nexport class DialogBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.hideActions = false;\n        this.stacked = false;\n        this.heading = '';\n        this.scrimClickAction = 'close';\n        this.escapeKeyAction = 'close';\n        this.open = false;\n        this.defaultAction = 'close';\n        this.actionAttribute = 'dialogAction';\n        this.initialFocusAttribute = 'dialogInitialFocus';\n        this.initialSupressDefaultPressSelector = '';\n        this.mdcFoundationClass = MDCDialogFoundation;\n        this.boundHandleClick = null;\n        this.boundHandleKeydown = null;\n        this.boundHandleDocumentKeydown = null;\n    }\n    set suppressDefaultPressSelector(selector) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setSuppressDefaultPressSelector(selector);\n        }\n        else {\n            this.initialSupressDefaultPressSelector = selector;\n        }\n    }\n    /**\n     * @export\n     */\n    get suppressDefaultPressSelector() {\n        return this.mdcFoundation ?\n            this.mdcFoundation.getSuppressDefaultPressSelector() :\n            this.initialSupressDefaultPressSelector;\n    }\n    get primaryButton() {\n        let assignedNodes = this.primarySlot.assignedNodes();\n        assignedNodes = assignedNodes.filter((node) => node instanceof HTMLElement);\n        const button = assignedNodes[0];\n        return button ? button : null;\n    }\n    emitNotification(name, action) {\n        const init = { detail: action ? { action } : {} };\n        const ev = new CustomEvent(name, init);\n        this.dispatchEvent(ev);\n    }\n    getInitialFocusEl() {\n        const initFocusSelector = `[${this.initialFocusAttribute}]`;\n        // only search light DOM. This typically handles all the cases\n        const lightDomQs = this.querySelector(initFocusSelector);\n        if (lightDomQs) {\n            return lightDomQs;\n        }\n        // if not in light dom, search each flattened distributed node.\n        const primarySlot = this.primarySlot;\n        const primaryNodes = primarySlot.assignedNodes({ flatten: true });\n        const primaryFocusElement = this.searchNodeTreesForAttribute(primaryNodes, this.initialFocusAttribute);\n        if (primaryFocusElement) {\n            return primaryFocusElement;\n        }\n        const secondarySlot = this.secondarySlot;\n        const secondaryNodes = secondarySlot.assignedNodes({ flatten: true });\n        const secondaryFocusElement = this.searchNodeTreesForAttribute(secondaryNodes, this.initialFocusAttribute);\n        if (secondaryFocusElement) {\n            return secondaryFocusElement;\n        }\n        const contentSlot = this.contentSlot;\n        const contentNodes = contentSlot.assignedNodes({ flatten: true });\n        const initFocusElement = this.searchNodeTreesForAttribute(contentNodes, this.initialFocusAttribute);\n        return initFocusElement;\n    }\n    searchNodeTreesForAttribute(nodes, attribute) {\n        for (const node of nodes) {\n            if (!(node instanceof HTMLElement)) {\n                continue;\n            }\n            if (node.hasAttribute(attribute)) {\n                return node;\n            }\n            else {\n                const selection = node.querySelector(`[${attribute}]`);\n                if (selection) {\n                    return selection;\n                }\n            }\n        }\n        return null;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { addBodyClass: () => document.body.style.overflow = 'hidden', removeBodyClass: () => document.body.style.overflow = '', areButtonsStacked: () => this.stacked, clickDefaultButton: () => {\n                const primary = this.primaryButton;\n                if (primary) {\n                    primary.click();\n                }\n            }, eventTargetMatches: (target, selector) => target ? matches(target, selector) : false, getActionFromEvent: (e) => {\n                if (!e.target) {\n                    return '';\n                }\n                const element = closest(e.target, `[${this.actionAttribute}]`);\n                const action = element && element.getAttribute(this.actionAttribute);\n                return action;\n            }, getInitialFocusEl: () => {\n                return this.getInitialFocusEl();\n            }, isContentScrollable: () => {\n                const el = this.contentElement;\n                return el ? el.scrollHeight > el.offsetHeight : false;\n            }, notifyClosed: (action) => this.emitNotification('closed', action), notifyClosing: (action) => {\n                if (!this.closingDueToDisconnect) {\n                    // Don't set our open state to closed just because we were\n                    // disconnected. That way if we get reconnected, we'll know to\n                    // re-open.\n                    this.open = false;\n                }\n                this.emitNotification('closing', action);\n            }, notifyOpened: () => this.emitNotification('opened'), notifyOpening: () => {\n                this.open = true;\n                this.emitNotification('opening');\n            }, reverseButtons: () => { }, releaseFocus: () => {\n                blockingElements.remove(this);\n            }, trapFocus: (el) => {\n                if (!this.isConnected) {\n                    // this is the case where it is opened and closed and then removed\n                    // from DOM before the animation has completed. Blocking Elements will\n                    // throw if this is the case\n                    return;\n                }\n                blockingElements.push(this);\n                if (el) {\n                    el.focus();\n                }\n            }, registerContentEventHandler: (evtType, handler) => {\n                const el = this.contentElement;\n                el.addEventListener(evtType, handler);\n            }, deregisterContentEventHandler: (evtType, handler) => {\n                const el = this.contentElement;\n                el.removeEventListener(evtType, handler);\n            }, isScrollableContentAtTop: () => {\n                const el = this.contentElement;\n                return el ? el.scrollTop === 0 : false;\n            }, isScrollableContentAtBottom: () => {\n                const el = this.contentElement;\n                return el ?\n                    Math.ceil(el.scrollHeight - el.scrollTop) === el.clientHeight :\n                    false;\n            }, registerWindowEventHandler: (evtType, handler) => {\n                window.addEventListener(evtType, handler, applyPassive());\n            }, deregisterWindowEventHandler: (evtType, handler) => {\n                window.removeEventListener(evtType, handler, applyPassive());\n            } });\n    }\n    render() {\n        const classes = {\n            [cssClasses.STACKED]: this.stacked,\n        };\n        let heading = html ``;\n        if (this.heading) {\n            heading = this.renderHeading();\n        }\n        const actionsClasses = {\n            'mdc-dialog__actions': !this.hideActions,\n        };\n        return html `\n    <div class=\"mdc-dialog ${classMap(classes)}\"\n        role=\"alertdialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"title\"\n        aria-describedby=\"content\">\n      <div class=\"mdc-dialog__container\">\n        <div class=\"mdc-dialog__surface\">\n          ${heading}\n          <div id=\"content\" class=\"mdc-dialog__content\">\n            <slot id=\"contentSlot\"></slot>\n          </div>\n          <footer\n              id=\"actions\"\n              class=\"${classMap(actionsClasses)}\">\n            <span>\n              <slot name=\"secondaryAction\"></slot>\n            </span>\n            <span>\n             <slot name=\"primaryAction\"></slot>\n            </span>\n          </footer>\n        </div>\n      </div>\n      <div class=\"mdc-dialog__scrim\"></div>\n    </div>`;\n    }\n    renderHeading() {\n        return html `\n      <h2 id=\"title\" class=\"mdc-dialog__title\">${this.heading}</h2>`;\n    }\n    firstUpdated() {\n        super.firstUpdated();\n        this.mdcFoundation.setAutoStackButtons(true);\n        if (this.initialSupressDefaultPressSelector) {\n            this.suppressDefaultPressSelector =\n                this.initialSupressDefaultPressSelector;\n        }\n        else {\n            this.suppressDefaultPressSelector = [\n                this.suppressDefaultPressSelector, 'mwc-textarea',\n                'mwc-menu mwc-list-item', 'mwc-select mwc-list-item'\n            ].join(', ');\n        }\n        this.boundHandleClick = this.mdcFoundation.handleClick.bind(this.mdcFoundation);\n        this.boundHandleKeydown = this.mdcFoundation.handleKeydown.bind(this.mdcFoundation);\n        this.boundHandleDocumentKeydown =\n            this.mdcFoundation.handleDocumentKeydown.bind(this.mdcFoundation);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.open && this.mdcFoundation && !this.mdcFoundation.isOpen()) {\n            // We probably got disconnected while we were still open. Re-open,\n            // matching the behavior of native <dialog>.\n            this.setEventListeners();\n            this.mdcFoundation.open();\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.open && this.mdcFoundation) {\n            // If this dialog is opened and then disconnected, we want to close\n            // the foundation, so that 1) any pending timers are cancelled\n            // (in particular for trapFocus), and 2) if we reconnect, we can open\n            // the foundation again to retrigger animations and focus.\n            this.removeEventListeners();\n            this.closingDueToDisconnect = true;\n            this.mdcFoundation.close(this.currentAction || this.defaultAction);\n            this.closingDueToDisconnect = false;\n            this.currentAction = undefined;\n            // When we close normally, the releaseFocus callback handles removing\n            // ourselves from the blocking elements stack. However, that callback\n            // happens on a delay, and when we are closing due to a disconnect we\n            // need to remove ourselves before the blocking element polyfill's\n            // mutation observer notices and logs a warning, since it's not valid to\n            // be in the blocking elements stack while disconnected.\n            blockingElements.remove(this);\n        }\n    }\n    forceLayout() {\n        this.mdcFoundation.layout();\n    }\n    focus() {\n        const initialFocusEl = this.getInitialFocusEl();\n        initialFocusEl && initialFocusEl.focus();\n    }\n    blur() {\n        if (!this.shadowRoot) {\n            return;\n        }\n        const activeEl = this.shadowRoot.activeElement;\n        if (activeEl) {\n            if (activeEl instanceof HTMLElement) {\n                activeEl.blur();\n            }\n        }\n        else {\n            const root = this.getRootNode();\n            const activeEl = root instanceof Document ? root.activeElement : null;\n            if (activeEl instanceof HTMLElement) {\n                activeEl.blur();\n            }\n        }\n    }\n    setEventListeners() {\n        if (this.boundHandleClick) {\n            this.mdcRoot.addEventListener('click', this.boundHandleClick);\n        }\n        if (this.boundHandleKeydown) {\n            this.mdcRoot.addEventListener('keydown', this.boundHandleKeydown, applyPassive());\n        }\n        if (this.boundHandleDocumentKeydown) {\n            document.addEventListener('keydown', this.boundHandleDocumentKeydown, applyPassive());\n        }\n    }\n    removeEventListeners() {\n        if (this.boundHandleClick) {\n            this.mdcRoot.removeEventListener('click', this.boundHandleClick);\n        }\n        if (this.boundHandleKeydown) {\n            this.mdcRoot.removeEventListener('keydown', this.boundHandleKeydown);\n        }\n        if (this.boundHandleDocumentKeydown) {\n            document.removeEventListener('keydown', this.boundHandleDocumentKeydown);\n        }\n    }\n    close() {\n        this.open = false;\n    }\n    show() {\n        this.open = true;\n    }\n}\n__decorate([\n    query('.mdc-dialog')\n], DialogBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('slot[name=\"primaryAction\"]')\n], DialogBase.prototype, \"primarySlot\", void 0);\n__decorate([\n    query('slot[name=\"secondaryAction\"]')\n], DialogBase.prototype, \"secondarySlot\", void 0);\n__decorate([\n    query('#contentSlot')\n], DialogBase.prototype, \"contentSlot\", void 0);\n__decorate([\n    query('.mdc-dialog__content')\n], DialogBase.prototype, \"contentElement\", void 0);\n__decorate([\n    query('.mdc-container')\n], DialogBase.prototype, \"conatinerElement\", void 0);\n__decorate([\n    property({ type: Boolean })\n], DialogBase.prototype, \"hideActions\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function () {\n        this.forceLayout();\n    })\n], DialogBase.prototype, \"stacked\", void 0);\n__decorate([\n    property({ type: String })\n], DialogBase.prototype, \"heading\", void 0);\n__decorate([\n    property({ type: String }),\n    observer(function (newAction) {\n        this.mdcFoundation.setScrimClickAction(newAction);\n    })\n], DialogBase.prototype, \"scrimClickAction\", void 0);\n__decorate([\n    property({ type: String }),\n    observer(function (newAction) {\n        this.mdcFoundation.setEscapeKeyAction(newAction);\n    })\n], DialogBase.prototype, \"escapeKeyAction\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (isOpen) {\n        // Check isConnected because we could have been disconnected before first\n        // update. If we're now closed, then we shouldn't start the MDC foundation\n        // opening animation. If we're now closed, then we've already closed the\n        // foundation in disconnectedCallback.\n        if (this.mdcFoundation && this.isConnected) {\n            if (isOpen) {\n                this.setEventListeners();\n                this.mdcFoundation.open();\n            }\n            else {\n                this.removeEventListeners();\n                this.mdcFoundation.close(this.currentAction || this.defaultAction);\n                this.currentAction = undefined;\n            }\n        }\n    })\n], DialogBase.prototype, \"open\", void 0);\n__decorate([\n    property()\n], DialogBase.prototype, \"defaultAction\", void 0);\n__decorate([\n    property()\n], DialogBase.prototype, \"actionAttribute\", void 0);\n__decorate([\n    property()\n], DialogBase.prototype, \"initialFocusAttribute\", void 0);\n//# sourceMappingURL=mwc-dialog-base.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport { css } from 'lit';\nexport const styles = css `.mdc-dialog .mdc-dialog__surface{background-color:#fff;background-color:var(--mdc-theme-surface, #fff)}.mdc-dialog .mdc-dialog__scrim{background-color:rgba(0,0,0,.32)}.mdc-dialog .mdc-dialog__surface-scrim{background-color:rgba(0,0,0,.32)}.mdc-dialog .mdc-dialog__title{color:rgba(0,0,0,.87)}.mdc-dialog .mdc-dialog__content{color:rgba(0,0,0,.6)}.mdc-dialog .mdc-dialog__close{color:#000;color:var(--mdc-theme-on-surface, #000)}.mdc-dialog .mdc-dialog__close .mdc-icon-button__ripple::before,.mdc-dialog .mdc-dialog__close .mdc-icon-button__ripple::after{background-color:#000;background-color:var(--mdc-ripple-color, var(--mdc-theme-on-surface, #000))}.mdc-dialog .mdc-dialog__close:hover .mdc-icon-button__ripple::before,.mdc-dialog .mdc-dialog__close.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-dialog .mdc-dialog__close.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.mdc-dialog .mdc-dialog__close:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-dialog .mdc-dialog__close:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.mdc-dialog .mdc-dialog__close:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-dialog .mdc-dialog__close.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title,.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__actions,.mdc-dialog.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:rgba(0,0,0,.12)}.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:1px solid rgba(0,0,0,.12);margin-bottom:0}.mdc-dialog.mdc-dialog-scroll-divider-header.mdc-dialog--fullscreen .mdc-dialog__header{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0,0,0,.12)}.mdc-dialog .mdc-dialog__surface{border-radius:4px;border-radius:var(--mdc-shape-medium, 4px)}.mdc-dialog__surface{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0,0,0,.12)}.mdc-dialog__title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1.25rem;font-size:var(--mdc-typography-headline6-font-size, 1.25rem);line-height:2rem;line-height:var(--mdc-typography-headline6-line-height, 2rem);font-weight:500;font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:0.0125em;letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:inherit;text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-headline6-text-transform, inherit)}.mdc-dialog__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1rem;font-size:var(--mdc-typography-body1-font-size, 1rem);line-height:1.5rem;line-height:var(--mdc-typography-body1-line-height, 1.5rem);font-weight:400;font-weight:var(--mdc-typography-body1-font-weight, 400);letter-spacing:0.03125em;letter-spacing:var(--mdc-typography-body1-letter-spacing, 0.03125em);text-decoration:inherit;text-decoration:var(--mdc-typography-body1-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body1-text-transform, inherit)}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:0;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:#fff;background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:7;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(max-width: 600px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid transparent;border-radius:inherit;content:\"\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\"\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid transparent;display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid transparent}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid transparent}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1;z-index:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}#actions:not(.mdc-dialog__actions){display:none}.mdc-dialog__surface{box-shadow:var(--mdc-dialog-box-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}@media(min-width: 560px){.mdc-dialog .mdc-dialog__surface{max-width:560px;max-width:var(--mdc-dialog-max-width, 560px)}}.mdc-dialog .mdc-dialog__scrim{background-color:rgba(0, 0, 0, 0.32);background-color:var(--mdc-dialog-scrim-color, rgba(0, 0, 0, 0.32))}.mdc-dialog .mdc-dialog__title{color:rgba(0, 0, 0, 0.87);color:var(--mdc-dialog-heading-ink-color, rgba(0, 0, 0, 0.87))}.mdc-dialog .mdc-dialog__content{color:rgba(0, 0, 0, 0.6);color:var(--mdc-dialog-content-ink-color, rgba(0, 0, 0, 0.6))}.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title,.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__actions{border-color:rgba(0, 0, 0, 0.12);border-color:var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12))}.mdc-dialog .mdc-dialog__surface{min-width:280px;min-width:var(--mdc-dialog-min-width, 280px)}.mdc-dialog .mdc-dialog__surface{max-height:var(--mdc-dialog-max-height, calc(100% - 32px))}#actions ::slotted(*){margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] #actions ::slotted(*),#actions ::slotted(*[dir=rtl]){margin-left:0;margin-right:8px}[dir=rtl] #actions ::slotted(*),#actions ::slotted(*[dir=rtl]){text-align:left}.mdc-dialog--stacked #actions{flex-direction:column-reverse}.mdc-dialog--stacked #actions *:not(:last-child) ::slotted(*){flex-basis:.000000001px;margin-top:12px}`;\n//# sourceMappingURL=mwc-dialog.css.js.map","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { customElement } from 'lit/decorators.js';\nimport { DialogBase } from './mwc-dialog-base.js';\nimport { styles } from './mwc-dialog.css.js';\nlet Dialog = class Dialog extends DialogBase {\n};\nDialog.styles = [styles];\nDialog = __decorate([\n    customElement('mwc-dialog')\n], Dialog);\nexport { Dialog };\n//# sourceMappingURL=mwc-dialog.js.map"],"names":["_a","_b","_c","_blockingElements","Symbol","_alreadyInertElements","_topElParents","_siblingsToRestore","_parentMO","_topChanged","_swapInertedSibling","_inertSiblings","_restoreInertedSiblings","_getParents","_getDistributedChildren","_isInertable","_handleMutations","BlockingElementsImpl","constructor","this","Set","destructor","nullable","top","elems","length","push","element","remove","i","indexOf","splice","pop","has","newTop","toKeepInert","oldParents","clear","newParents","parentNode","document","body","Error","toSkip","j","slice","oldInert","newInert","siblingsToRestore","inert","add","delete","undefined","elements","disconnect","siblings","sibling","parent","children","inertedSiblings","mo","MutationObserver","bind","parentToObserve","maybeShadyRoot","__shady","host","observe","childList","mutations","parents","mutation","target","idx","inertedChild","removedNodes","console","info","addedNodes","test","localName","current","nodeType","Node","ELEMENT_NODE","assignedSlot","shadowRoot","result","nodes","slots","querySelectorAll","assignedNodes","flatten","$blockingElements","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","window","Array","matches","Element","msMatchesSelector","_focusableElementsString","join","InertRoot","rootElement","inertManager","_inertManager","_rootElement","_managedNodes","hasAttribute","_savedAriaHidden","getAttribute","setAttribute","_makeSubtreeUnfocusable","_observer","_onMutation","attributes","subtree","value","removeAttribute","forEach","inertNode","_unmanageNode","node","startNode","_this2","composedTreeWalk","_visitNode","activeElement","contains","root","DOCUMENT_FRAGMENT_NODE","blur","focus","_adoptInertRoot","call","_manageNode","register","deregister","_this3","inertSubroot","getInertRoot","setInert","managedNodes","savedInertNode","records","self","record","type","_unmanageSubtree","attributeName","managedNode","get","set","ariaHidden","InertNode","inertRoot","_node","_overrodeFocusMethod","_inertRoots","_savedTabIndex","_destroyed","ensureUntabbable","_throwIfDestroyed","destroyed","tabIndex","hasSavedTabIndex","size","InertManager","_document","Map","_watchForInert","addInertStyle","head","documentElement","readyState","addEventListener","_onDocumentLoaded","addInertRoot","removeInertRoot","inertElement","_this","inertElements","unshift","HTMLElement","hasOwnProperty","callback","shadowRootAncestor","content","distributedNodes","getDistributedNodes","slot","_distributedNodes","_i","child","firstChild","nextSibling","querySelector","style","createElement","textContent","appendChild","AnimationKeys","cssClasses","CLOSING","OPEN","OPENING","SCROLLABLE","SCROLL_LOCK","STACKED","FULLSCREEN","SCROLL_DIVIDER_HEADER","SCROLL_DIVIDER_FOOTER","SURFACE_SCRIM_SHOWN","SURFACE_SCRIM_SHOWING","SURFACE_SCRIM_HIDING","SCRIM_HIDDEN","strings","ACTION_ATTRIBUTE","BUTTON_DEFAULT_ATTRIBUTE","BUTTON_SELECTOR","CLOSED_EVENT","CLOSE_ACTION","CLOSING_EVENT","CONTAINER_SELECTOR","CONTENT_SELECTOR","DESTROY_ACTION","INITIAL_FOCUS_ATTRIBUTE","OPENED_EVENT","OPENING_EVENT","SCRIM_SELECTOR","SUPPRESS_DEFAULT_PRESS_SELECTOR","SURFACE_SELECTOR","numbers","DIALOG_ANIMATION_CLOSE_TIME_MS","DIALOG_ANIMATION_OPEN_TIME_MS","AnimationFrame","rafIDs","request","cancel","frameID","requestAnimationFrame","frame","rafID","cancelAnimationFrame","cancelAll","_","getQueue","queue","MDCDialogFoundation","_super","adapter","__assign","defaultAdapter","dialogOpen","isFullscreen","animationFrame","animationTimer","escapeKeyAction","scrimClickAction","autoStackButtons","areButtonsStacked","suppressDefaultPressSelector","animFrame","contentScrollHandler","handleScrollEvent","windowResizeHandler","layout","windowOrientationChangeHandler","__extends","addBodyClass","addClass","clickDefaultButton","eventTargetMatches","getActionFromEvent","getInitialFocusEl","hasClass","isContentScrollable","notifyClosed","notifyClosing","notifyOpened","notifyOpening","releaseFocus","removeBodyClass","removeClass","reverseButtons","trapFocus","registerContentEventHandler","deregisterContentEventHandler","isScrollableContentAtTop","isScrollableContentAtBottom","registerWindowEventHandler","deregisterWindowEventHandler","init","setAutoStackButtons","destroy","clearTimeout","handleAnimationTimerEnd","open","dialogOptions","isAboveFullscreenDialog","runNextAnimationFrame","setTimeout","close","action","showSurfaceScrim","hideSurfaceScrim","handleSurfaceScrimTransitionEnd","isOpen","getEscapeKeyAction","setEscapeKeyAction","getScrimClickAction","setScrimClickAction","getAutoStackButtons","autoStack","getSuppressDefaultPressSelector","setSuppressDefaultPressSelector","selector","POLL_LAYOUT_CHANGE","layoutInternal","handleClick","evt","handleKeydown","isEnter","keyCode","composedPath","isDefault","handleDocumentKeydown","POLL_SCROLL_POS","toggleScrollDividerHeader","toggleScrollDividerFooter","detectStackedButtons","toggleScrollableClasses","MDCFoundation","applyPassive","globalObj","passiveSupported","options","passive","handler","removeEventListener","err","supportsPassiveOption","blockingElements","DialogBase","BaseElement","super","arguments","hideActions","stacked","heading","defaultAction","actionAttribute","initialFocusAttribute","initialSupressDefaultPressSelector","mdcFoundationClass","boundHandleClick","boundHandleKeydown","boundHandleDocumentKeydown","mdcFoundation","primaryButton","primarySlot","filter","button","emitNotification","name","ev","CustomEvent","detail","dispatchEvent","initFocusSelector","lightDomQs","primaryNodes","primaryFocusElement","searchNodeTreesForAttribute","secondaryNodes","secondarySlot","secondaryFocusElement","contentNodes","contentSlot","attribute","selection","createAdapter","assign","addHasRemoveClass","mdcRoot","overflow","primary","click","e","closest","el","contentElement","scrollHeight","offsetHeight","closingDueToDisconnect","isConnected","evtType","scrollTop","Math","ceil","clientHeight","render","classes","html","renderHeading","actionsClasses","classMap","firstUpdated","connectedCallback","setEventListeners","disconnectedCallback","removeEventListeners","currentAction","forceLayout","initialFocusEl","activeEl","getRootNode","Document","show","__decorate","query","property","Boolean","observer","String","newAction","reflect","styles","css","Dialog","customElement"],"mappings":"4IAgBA,MACI,IAAIA,EAAIC,EAAIC,EAEZ,MAAMC,EAAoBC,SACpBC,EAAwBD,SACxBE,EAAgBF,SAChBG,EAAqBH,SACrBI,EAAYJ,SAEZK,EAAcL,SACdM,EAAsBN,SACtBO,EAAiBP,SACjBQ,EAA0BR,SAC1BS,EAAcT,SACdU,EAA0BV,SAC1BW,EAAeX,SACfY,EAAmBZ,SACzB,MAAMa,EACF,WAAAC,GAIIC,KAAKnB,GAAM,GAOXmB,KAAKlB,GAAM,GAKXkB,KAAKjB,GAAM,IAAIkB,GAC3B,CACQ,UAAAC,GAEIF,KAAKP,GAAyBO,KAAKb,IAKnC,MAAMgB,EAAWH,KACjBG,EAASnB,GAAqB,KAC9BmB,EAAShB,GAAiB,KAC1BgB,EAASjB,GAAyB,IAC9C,CACQ,OAAIkB,GACA,MAAMC,EAAQL,KAAKhB,GACnB,OAAOqB,EAAMA,EAAMC,OAAS,IAAM,IAC9C,CACQ,IAAAC,CAAKC,GACIA,GAAWA,IAAYR,KAAKI,MAIjCJ,KAAKS,OAAOD,GACZR,KAAKV,GAAakB,GAClBR,KAAKhB,GAAmBuB,KAAKC,GACzC,CACQ,MAAAC,CAAOD,GACH,MAAME,EAAIV,KAAKhB,GAAmB2B,QAAQH,GAC1C,OAAU,IAANE,IAGJV,KAAKhB,GAAmB4B,OAAOF,EAAG,GAE9BA,IAAMV,KAAKhB,GAAmBsB,QAC9BN,KAAKV,GAAaU,KAAKI,MAEpB,EACnB,CACQ,GAAAS,GACI,MAAMT,EAAMJ,KAAKI,IAEjB,OADAA,GAAOJ,KAAKS,OAAOL,GACZA,CACnB,CACQ,GAAAU,CAAIN,GACA,OAAsD,IAA/CR,KAAKhB,GAAmB2B,QAAQH,EACnD,CAKQ,EAAE3B,EAAKG,EAAmBF,EAAKK,EAAeJ,EAAKG,EAAuBI,IAAcyB,GACpF,MAAMC,EAAchB,KAAKd,GACnB+B,EAAajB,KAAKb,GAExB,IAAK4B,EAID,OAHAf,KAAKP,GAAyBwB,GAC9BD,EAAYE,aACZlB,KAAKb,GAAiB,IAG1B,MAAMgC,EAAanB,KAAKN,GAAaqB,GAErC,GAAII,EAAWA,EAAWb,OAAS,GAAGc,aAAeC,SAASC,KAC1D,MAAMC,MAAM,sDAIhBvB,KAAKb,GAAiBgC,EACtB,MAAMK,EAASxB,KAAKL,GAAyBoB,GAE7C,IAAKE,EAAWX,OAEZ,YADAN,KAAKR,GAAgB2B,EAAYK,EAAQR,GAG7C,IAAIN,EAAIO,EAAWX,OAAS,EACxBmB,EAAIN,EAAWb,OAAS,EAE5B,KAAOI,EAAI,GAAKe,EAAI,GAAKR,EAAWP,KAAOS,EAAWM,IAClDf,IACAe,IAIAR,EAAWP,KAAOS,EAAWM,IAC7BzB,KAAKT,GAAqB0B,EAAWP,GAAIS,EAAWM,IAGxDf,EAAI,GAAKV,KAAKP,GAAyBwB,EAAWS,MAAM,EAAGhB,IAE3De,EAAI,GAAKzB,KAAKR,GAAgB2B,EAAWO,MAAM,EAAGD,GAAID,EAAQ,KAC1E,CAOQ,CAACjC,GAAqBoC,EAAUC,GAC5B,MAAMC,EAAoBF,EAASvC,GAG/BY,KAAKJ,GAAc+B,KAAcA,EAASG,QAC1CH,EAASG,OAAQ,EACjBD,EAAkBE,IAAIJ,IAItBE,EAAkBf,IAAIc,KACtBA,EAASE,OAAQ,EACjBD,EAAkBG,OAAOJ,IAE7BA,EAASvC,GAAasC,EAAStC,GAC/BuC,EAASxC,GAAsByC,EAC/BF,EAAStC,QAAa4C,EACtBN,EAASvC,QAAsB6C,CAC3C,CAOQ,CAACxC,GAAyByC,GACtB,IAAK,MAAM1B,KAAW0B,EAAU,CACjB1B,EAAQnB,GAChB8C,aACH3B,EAAQnB,QAAa4C,EACrB,MAAMG,EAAW5B,EAAQpB,GACzB,IAAK,MAAMiD,KAAWD,EAClBC,EAAQP,OAAQ,EAEpBtB,EAAQpB,QAAsB6C,CAC9C,CACA,CASQ,CAACzC,GAAgB0C,EAAUV,EAAQR,GAC/B,IAAK,MAAMR,KAAW0B,EAAU,CAE5B,MAAMI,EAAS9B,EAAQY,WACjBmB,EAAWD,EAAOC,SAClBC,EAAkB,IAAIvC,IAC5B,IAAK,IAAIwB,EAAI,EAAGA,EAAIc,EAASjC,OAAQmB,IAAK,CACtC,MAAMY,EAAUE,EAASd,GAErBY,IAAY7B,IAAYR,KAAKJ,GAAcyC,IAC1Cb,GAAUA,EAAOV,IAAIuB,KAItBrB,GAAeqB,EAAQP,MACvBd,EAAYe,IAAIM,IAGhBA,EAAQP,OAAQ,EAChBU,EAAgBT,IAAIM,IAE5C,CAEgB7B,EAAQpB,GAAsBoD,EAE9B,MAAMC,EAAK,IAAIC,iBAAiB1C,KAAKH,GAAkB8C,KAAK3C,OAC5DQ,EAAQnB,GAAaoD,EACrB,IAAIG,EAAkBN,EAItB,MAAMO,EAAiBD,EACnBC,EAAeC,SAAWD,EAAeE,OACzCH,EAAkBC,EAAeE,MAErCN,EAAGO,QAAQJ,EAAiB,CACxBK,WAAW,GAE/B,CACA,CAMQ,CAACpD,GAAkBqD,GACf,MAAMC,EAAUnD,KAAKb,GACf6B,EAAchB,KAAKd,GACzB,IAAK,MAAMkE,KAAYF,EAAW,CAG9B,MAAMG,EAASD,EAASC,OAAON,MAAQK,EAASC,OAC1CC,EAAMD,IAAWhC,SAASC,KAC5B6B,EAAQ7C,OACR6C,EAAQxC,QAAQ0C,GACdE,EAAeJ,EAAQG,EAAM,GAC7Bd,EAAkBe,EAAanE,GAErC,IAAK,IAAIsB,EAAI,EAAGA,EAAI0C,EAASI,aAAalD,OAAQI,IAAK,CACnD,MAAM2B,EAAUe,EAASI,aAAa9C,GACtC,GAAI2B,IAAYkB,EAGZ,OAFAE,QAAQC,KAAK,sDACb1D,KAAKa,MAGL2B,EAAgB1B,IAAIuB,KACpBA,EAAQP,OAAQ,EAChBU,EAAgBR,OAAOK,GAE/C,CAEgB,IAAK,IAAI3B,EAAI,EAAGA,EAAI0C,EAASO,WAAWrD,OAAQI,IAAK,CACjD,MAAM2B,EAAUe,EAASO,WAAWjD,GAC/BV,KAAKJ,GAAcyC,KAGpBrB,GAAeqB,EAAQP,MACvBd,EAAYe,IAAIM,IAGhBA,EAAQP,OAAQ,EAChBU,EAAgBT,IAAIM,IAE5C,CACA,CACA,CAIQ,CAACzC,GAAcY,GACX,OAAO,IAAU,4BAA4BoD,KAAKpD,EAAQqD,UACtE,CAKQ,CAACnE,GAAac,GACV,MAAM2C,EAAU,GAChB,IAAIW,EAAUtD,EAEd,KAAOsD,GAAWA,IAAYzC,SAASC,MAMnC,GAJIwC,EAAQC,WAAaC,KAAKC,cAC1Bd,EAAQ5C,KAAKuD,GAGbA,EAAQI,aAAZ,CAEI,KAAOJ,EAAUA,EAAQI,cACrBf,EAAQ5C,KAAKuD,GAGjBA,EAAUX,EAAQtC,KAEtC,MACgBiD,EAAUA,EAAQ1C,YACd0C,EAAQf,KAEhB,OAAOI,CACnB,CAKQ,CAACxD,GAAyBa,GACtB,MAAM2D,EAAa3D,EAAQ2D,WAC3B,IAAKA,EACD,OAAO,KAEX,MAAMC,EAAS,IAAInE,IACnB,IAAIS,EACAe,EACA4C,EACJ,MAAMC,EAAQH,EAAWI,iBAAiB,QAC1C,GAAID,EAAMhE,QAAUgE,EAAM,GAAGE,cACzB,IAAK9D,EAAI,EAAGA,EAAI4D,EAAMhE,OAAQI,IAI1B,IAHA2D,EAAQC,EAAM5D,GAAG8D,cAAc,CAC3BC,SAAS,IAERhD,EAAI,EAAGA,EAAI4C,EAAM/D,OAAQmB,IACtB4C,EAAM5C,GAAGsC,WAAaC,KAAKC,cAC3BG,EAAOrC,IAAIsC,EAAM5C,IAMjC,OAAO2C,CACnB,EAEI/C,SAASqD,kBACL,IAAI5E,CACX,EAzUD,4CChBA,IAAI6E,EAAe,WAAc,SAASC,EAAiBvB,EAAQwB,GAAS,IAAK,IAAInE,EAAI,EAAGA,EAAImE,EAAMvE,OAAQI,IAAK,CAAE,IAAIoE,EAAaD,EAAMnE,GAAIoE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAe9B,EAAQyB,EAAWM,IAAKN,EAAc,CAAA,CAAG,OAAO,SAAUO,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYV,EAAiBS,EAAYG,UAAWF,GAAiBC,GAAaX,EAAiBS,EAAaE,GAAqBF,CAAY,CAAG,CAA5hB,GAEnB,SAASI,EAAgBC,EAAUL,GAAe,KAAMK,aAAoBL,GAAgB,MAAM,IAAIM,UAAU,oCAAuC,EAOvJ,WAEE,GAAsB,oBAAXC,OAAX,CAMA,IAAIlE,EAAQmE,MAAML,UAAU9D,MAMxBoE,EAAUC,QAAQP,UAAUM,SAAWC,QAAQP,UAAUQ,kBAGzDC,EAA2B,CAAC,UAAW,aAAc,wBAAyB,yBAA0B,2BAA4B,yBAA0B,UAAW,UAAW,SAAU,SAAU,QAAS,qBAAqBC,KAAK,KAmB3OC,EAAY,WAKd,SAASA,EAAUC,EAAaC,GAC9BZ,EAAgBzF,KAAMmG,GAGtBnG,KAAKsG,cAAgBD,EAGrBrG,KAAKuG,aAAeH,EAMpBpG,KAAKwG,cAAgB,IAAIvG,IAGrBD,KAAKuG,aAAaE,aAAa,eAEjCzG,KAAK0G,iBAAmB1G,KAAKuG,aAAaI,aAAa,eAEvD3G,KAAK0G,iBAAmB,KAE1B1G,KAAKuG,aAAaK,aAAa,cAAe,QAG9C5G,KAAK6G,wBAAwB7G,KAAKuG,cAOlCvG,KAAK8G,UAAY,IAAIpE,iBAAiB1C,KAAK+G,YAAYpE,KAAK3C,OAC5DA,KAAK8G,UAAU9D,QAAQhD,KAAKuG,aAAc,CAAES,YAAY,EAAM/D,WAAW,EAAMgE,SAAS,IA+O1F,OAtOAtC,EAAawB,EAAW,CAAC,CACvBf,IAAK,aACL8B,MAAO,WACLlH,KAAK8G,UAAU3E,aAEXnC,KAAKuG,eACuB,OAA1BvG,KAAK0G,iBACP1G,KAAKuG,aAAaK,aAAa,cAAe5G,KAAK0G,kBAEnD1G,KAAKuG,aAAaY,gBAAgB,gBAItCnH,KAAKwG,cAAcY,SAAQ,SAAUC,GACnCrH,KAAKsH,cAAcD,EAAUE,KAC9B,GAAEvH,MAQHA,KAAK8G,UAA4B,KACjC9G,KAAKuG,aAA+B,KACpCvG,KAAKwG,cAAgC,KACrCxG,KAAKsG,cAAgC,OAOtC,CACDlB,IAAK,0BAML8B,MAAO,SAAiCM,GACtC,IAAIC,EAASzH,KAEb0H,EAAiBF,GAAW,SAAUD,GACpC,OAAOE,EAAOE,WAAWJ,EACnC,IAEQ,IAAIK,EAAgBvG,SAASuG,cAE7B,IAAKvG,SAASC,KAAKuG,SAASL,GAAY,CAKtC,IAHA,IAAID,EAAOC,EAEPM,OAAO7F,EACJsF,GAAM,CACX,GAAIA,EAAKxD,WAAaC,KAAK+D,uBAAwB,CACjDD,EAAiCP,EACjC,MAEFA,EAAOA,EAAKnG,WAEV0G,IACFF,EAAgBE,EAAKF,eAGrBJ,EAAUK,SAASD,KACrBA,EAAcI,OAIVJ,IAAkBvG,SAASuG,eAC7BvG,SAASC,KAAK2G,WASnB,CACD7C,IAAK,aACL8B,MAAO,SAAoBK,GACzB,GAAIA,EAAKxD,WAAaC,KAAKC,aAA3B,CAGA,IAAIzD,EAAqC+G,EAIrC/G,IAAYR,KAAKuG,cAAgB/F,EAAQiG,aAAa,UACxDzG,KAAKkI,gBAAgB1H,IAGnBsF,EAAQqC,KAAK3H,EAASyF,IAA6BzF,EAAQiG,aAAa,cAC1EzG,KAAKoI,YAAY5H,MASpB,CACD4E,IAAK,cACL8B,MAAO,SAAqBK,GAC1B,IAAIF,EAAYrH,KAAKsG,cAAc+B,SAASd,EAAMvH,MAClDA,KAAKwG,cAAczE,IAAIsF,KAQxB,CACDjC,IAAK,gBACL8B,MAAO,SAAuBK,GAC5B,IAAIF,EAAYrH,KAAKsG,cAAcgC,WAAWf,EAAMvH,MAChDqH,GACFrH,KAAKwG,cAAsB,OAAEa,KAShC,CACDjC,IAAK,mBACL8B,MAAO,SAA0BM,GAC/B,IAAIe,EAASvI,KAEb0H,EAAiBF,GAAW,SAAUD,GACpC,OAAOgB,EAAOjB,cAAcC,EACtC,MAQO,CACDnC,IAAK,kBACL8B,MAAO,SAAyBK,GAC9B,IAAIiB,EAAexI,KAAKsG,cAAcmC,aAAalB,GAI9CiB,IACHxI,KAAKsG,cAAcoC,SAASnB,GAAM,GAClCiB,EAAexI,KAAKsG,cAAcmC,aAAalB,IAGjDiB,EAAaG,aAAavB,SAAQ,SAAUwB,GAC1C5I,KAAKoI,YAAYQ,EAAerB,KACjC,GAAEvH,QASJ,CACDoF,IAAK,cACL8B,MAAO,SAAqB2B,EAASC,GACnCD,EAAQzB,SAAQ,SAAU2B,GACxB,IAAI1F,EAAoC0F,EAAO1F,OAC/C,GAAoB,cAAhB0F,EAAOC,KAETtH,EAAMyG,KAAKY,EAAOpF,YAAYyD,SAAQ,SAAUG,GAC9CvH,KAAK6G,wBAAwBU,EAC9B,GAAEvH,MAGH0B,EAAMyG,KAAKY,EAAOvF,cAAc4D,SAAQ,SAAUG,GAChDvH,KAAKiJ,iBAAiB1B,EACvB,GAAEvH,WACE,GAAoB,eAAhB+I,EAAOC,KAChB,GAA6B,aAAzBD,EAAOG,cAETlJ,KAAKoI,YAAY/E,QACZ,GAAIA,IAAWrD,KAAKuG,cAAyC,UAAzBwC,EAAOG,eAA6B7F,EAAOoD,aAAa,SAAU,CAG3GzG,KAAKkI,gBAAgB7E,GACrB,IAAImF,EAAexI,KAAKsG,cAAcmC,aAAapF,GACnDrD,KAAKwG,cAAcY,SAAQ,SAAU+B,GAC/B9F,EAAOwE,SAASsB,EAAY5B,OAC9BiB,EAAaJ,YAAYe,EAAY5B,KAEvD,IAGS,GAAEvH,QAEJ,CACDoF,IAAK,eACLgE,IAAK,WACH,OAAO,IAAInJ,IAAID,KAAKwG,iBAKrB,CACDpB,IAAK,qBACLgE,IAAK,WACH,OAAiC,OAA1BpJ,KAAK0G,mBAKb,CACDtB,IAAK,kBACLiE,IAAK,SAAaC,GAChBtJ,KAAK0G,iBAAmB4C,GAK1BF,IAAK,WACH,OAAOpJ,KAAK0G,qBAITP,CACX,CAtRkB,GAwSZoD,EAAY,WAKd,SAASA,EAAUhC,EAAMiC,GACvB/D,EAAgBzF,KAAMuJ,GAGtBvJ,KAAKyJ,MAAQlC,EAGbvH,KAAK0J,sBAAuB,EAM5B1J,KAAK2J,YAAc,IAAI1J,IAAI,CAACuJ,IAG5BxJ,KAAK4J,eAAiB,KAGtB5J,KAAK6J,YAAa,EAGlB7J,KAAK8J,mBAqJP,OA5IAnF,EAAa4E,EAAW,CAAC,CACvBnE,IAAK,aACL8B,MAAO,WAGL,GAFAlH,KAAK+J,oBAED/J,KAAKyJ,OAASzJ,KAAKyJ,MAAM1F,WAAaC,KAAKC,aAAc,CAC3D,IAAIzD,EAAqCR,KAAKyJ,MAClB,OAAxBzJ,KAAK4J,eACPpJ,EAAQoG,aAAa,WAAY5G,KAAK4J,gBAEtCpJ,EAAQ2G,gBAAgB,YAItBnH,KAAK0J,6BACAlJ,EAAQyH,MAKnBjI,KAAKyJ,MAAwB,KAC7BzJ,KAAK2J,YAA8B,KACnC3J,KAAK6J,YAAa,IAQnB,CACDzE,IAAK,oBAML8B,MAAO,WACL,GAAIlH,KAAKgK,UACP,MAAM,IAAIzI,MAAM,0CAMnB,CACD6D,IAAK,mBAIL8B,MAAO,WACL,GAAIlH,KAAKuH,KAAKxD,WAAaC,KAAKC,aAAhC,CAGA,IAAIzD,EAAqCR,KAAKuH,KAC9C,GAAIzB,EAAQqC,KAAK3H,EAASyF,GAA2B,CACnD,QAAgCzF,EAAQyJ,UAAmBjK,KAAKkK,iBAC9D,OAGE1J,EAAQiG,aAAa,cACvBzG,KAAK4J,eAA4CpJ,EAAQyJ,UAE3DzJ,EAAQoG,aAAa,WAAY,MAC7BpG,EAAQuD,WAAaC,KAAKC,eAC5BzD,EAAQyH,MAAQ,WAAc,EAC9BjI,KAAK0J,sBAAuB,EAE/B,MAAUlJ,EAAQiG,aAAa,cAC9BzG,KAAK4J,eAA4CpJ,EAAQyJ,SACzDzJ,EAAQ2G,gBAAgB,gBAS3B,CACD/B,IAAK,eACL8B,MAAO,SAAsBsC,GAC3BxJ,KAAK+J,oBACL/J,KAAK2J,YAAY5H,IAAIyH,KAUtB,CACDpE,IAAK,kBACL8B,MAAO,SAAyBsC,GAC9BxJ,KAAK+J,oBACL/J,KAAK2J,YAAoB,OAAEH,GACG,IAA1BxJ,KAAK2J,YAAYQ,MACnBnK,KAAKE,eAGR,CACDkF,IAAK,YACLgE,IAAK,WACH,OAAiCpJ,kBAGlC,CACDoF,IAAK,mBACLgE,IAAK,WACH,OAA+B,OAAxBpJ,KAAK4J,iBAKb,CACDxE,IAAK,OACLgE,IAAK,WAEH,OADApJ,KAAK+J,oBACE/J,KAAKyJ,QAKb,CACDrE,IAAK,gBACLiE,IAAK,SAAaY,GAChBjK,KAAK+J,oBACL/J,KAAK4J,eAAiBK,GAKxBb,IAAK,WAEH,OADApJ,KAAK+J,oBACE/J,KAAK4J,mBAITL,CACX,CAjLkB,GA8LZa,EAAe,WAIjB,SAASA,EAAa/I,GAGpB,GAFAoE,EAAgBzF,KAAMoK,IAEjB/I,EACH,MAAM,IAAIE,MAAM,qEAIlBvB,KAAKqK,UAAYhJ,EAMjBrB,KAAKwG,cAAgB,IAAI8D,IAMzBtK,KAAK2J,YAAc,IAAIW,IAMvBtK,KAAK8G,UAAY,IAAIpE,iBAAiB1C,KAAKuK,eAAe5H,KAAK3C,OAG/DwK,EAAcnJ,EAASoJ,MAAQpJ,EAASC,MAAQD,EAASqJ,iBAG7B,YAAxBrJ,EAASsJ,WACXtJ,EAASuJ,iBAAiB,mBAAoB5K,KAAK6K,kBAAkBlI,KAAK3C,OAE1EA,KAAK6K,oBAsKT,OA3JAlG,EAAayF,EAAc,CAAC,CAC1BhF,IAAK,WACL8B,MAAO,SAAkBY,EAAMhG,GAC7B,GAAIA,EAAO,CACT,GAAI9B,KAAK2J,YAAY7I,IAAIgH,GAEvB,OAGF,IAAI0B,EAAY,IAAIrD,EAAU2B,EAAM9H,MAKpC,GAJA8H,EAAKlB,aAAa,QAAS,IAC3B5G,KAAK2J,YAAYN,IAAIvB,EAAM0B,IAGtBxJ,KAAKqK,UAAU/I,KAAKuG,SAASC,GAEhC,IADA,IAAIxF,EAASwF,EAAK1G,WACXkB,GACmB,KAApBA,EAAOyB,UACTyG,EAAclI,GAEhBA,EAASA,EAAOlB,UAG9B,KAAe,CACL,IAAKpB,KAAK2J,YAAY7I,IAAIgH,GAExB,OAGe9H,KAAK2J,YAAYP,IAAItB,GAC3B5H,aACXF,KAAK2J,YAAoB,OAAE7B,GAC3BA,EAAKX,gBAAgB,YAUxB,CACD/B,IAAK,eACL8B,MAAO,SAAsB1G,GAC3B,OAAOR,KAAK2J,YAAYP,IAAI5I,KAY7B,CACD4E,IAAK,WACL8B,MAAO,SAAkBK,EAAMiC,GAC7B,IAAInC,EAAYrH,KAAKwG,cAAc4C,IAAI7B,GAUvC,YATkBtF,IAAdoF,EAEFA,EAAUyD,aAAatB,GAEvBnC,EAAY,IAAIkC,EAAUhC,EAAMiC,GAGlCxJ,KAAKwG,cAAc6C,IAAI9B,EAAMF,GAEtBA,IAaR,CACDjC,IAAK,aACL8B,MAAO,SAAoBK,EAAMiC,GAC/B,IAAInC,EAAYrH,KAAKwG,cAAc4C,IAAI7B,GACvC,OAAKF,GAILA,EAAU0D,gBAAgBvB,GACtBnC,EAAU2C,WACZhK,KAAKwG,cAAsB,OAAEe,GAGxBF,GARE,OAeV,CACDjC,IAAK,oBACL8B,MAAO,WAEexF,EAAMyG,KAAKnI,KAAKqK,UAAU9F,iBAAiB,YACjD6C,SAAQ,SAAU4D,GAC9BhL,KAAK0I,SAASsC,GAAc,EAC7B,GAAEhL,MAGHA,KAAK8G,UAAU9D,QAAQhD,KAAKqK,UAAU/I,MAAQtB,KAAKqK,UAAUK,gBAAiB,CAAE1D,YAAY,EAAMC,SAAS,EAAMhE,WAAW,MAS7H,CACDmC,IAAK,iBACL8B,MAAO,SAAwB2B,EAASC,GACtC,IAAImC,EAAQjL,KACZ6I,EAAQzB,SAAQ,SAAU2B,GACxB,OAAQA,EAAOC,MACb,IAAK,YACHtH,EAAMyG,KAAKY,EAAOpF,YAAYyD,SAAQ,SAAUG,GAC9C,GAAIA,EAAKxD,WAAaC,KAAKC,aAA3B,CAGA,IAAIiH,EAAgBxJ,EAAMyG,KAAKZ,EAAKhD,iBAAiB,YACjDuB,EAAQqC,KAAKZ,EAAM,YACrB2D,EAAcC,QAAQ5D,GAExB2D,EAAc9D,SAAQ,SAAU4D,GAC9BhL,KAAK0I,SAASsC,GAAc,EAC7B,GAAEC,GACJ,GAAEA,GACH,MACF,IAAK,aACH,GAA6B,UAAzBlC,EAAOG,cACT,OAEF,IAAI7F,EAAoC0F,EAAO1F,OAC3CvB,EAAQuB,EAAOoD,aAAa,SAChCwE,EAAMvC,SAASrF,EAAQvB,GAG5B,GAAE9B,UAIAoK,CACX,CA9MqB,GA4RnB,IAAKgB,YAAY5F,UAAU6F,eAAe,SAAU,CAElD,IAAIhF,EAAe,IAAI+D,EAAa/I,UAEpC6D,OAAOC,eAAeiG,YAAY5F,UAAW,QAAS,CACpDT,YAAY,EAEZqE,IAAK,WACH,OAAOpJ,KAAKyG,aAAa,QAC1B,EAED4C,IAAK,SAAavH,GAChBuE,EAAaqC,SAAS1I,KAAM8B,OA/ElC,SAAS4F,EAAiBH,EAAM+D,EAAUC,GACxC,GAAIhE,EAAKxD,UAAYC,KAAKC,aAAc,CACtC,IAAIzD,EAAqC+G,EACrC+D,GACFA,EAAS9K,GAOX,IAAI2D,EAAwC3D,EAAQ2D,WACpD,GAAIA,EAEF,YADAuD,EAAiBvD,EAAYmH,GAO/B,GAAyB,WAArB9K,EAAQqD,UAAwB,CAIlC,IAHA,IAAI2H,EAA4ChL,EAE5CiL,EAAmBD,EAAQE,oBAAsBF,EAAQE,sBAAwB,GAC5EhL,EAAI,EAAGA,EAAI+K,EAAiBnL,OAAQI,IAC3CgH,EAAiB+D,EAAiB/K,GAAI4K,GAExC,OAMF,GAAyB,QAArB9K,EAAQqD,UAAqB,CAI/B,IAHA,IAAI8H,EAAsCnL,EAEtCoL,EAAoBD,EAAKnH,cAAgBmH,EAAKnH,cAAc,CAAEC,SAAS,IAAU,GAC5EoH,EAAK,EAAGA,EAAKD,EAAkBtL,OAAQuL,IAC9CnE,EAAiBkE,EAAkBC,GAAKP,GAE1C,QAOJ,IADA,IAAIQ,EAAQvE,EAAKwE,WACD,MAATD,GACLpE,EAAiBoE,EAAOR,GACxBQ,EAAQA,EAAME,YAQlB,SAASxB,EAAcjD,GACrB,IAAIA,EAAK0E,cAAc,uCAAvB,CAGA,IAAIC,EAAQ7K,SAAS8K,cAAc,SACnCD,EAAMtF,aAAa,KAAM,eACzBsF,EAAME,YAAc,oMACpB7E,EAAK8E,YAAYH,IAmBpB,EAtzBD,MCaO,ICIHI,EDJOC,EAAa,CACpBC,QAAS,sBACTC,KAAM,mBACNC,QAAS,sBACTC,WAAY,yBACZC,YAAa,yBACbC,QAAS,sBACTC,WAAY,yBAIZC,sBAAuB,mCAIvBC,sBAAuB,mCAQvBC,oBAAqB,mCAErBC,sBAAuB,qCAEvBC,qBAAsB,oCAKtBC,aAAc,6BAEPC,EAAU,CACjBC,iBAAkB,yBAClBC,yBAA0B,iCAC1BC,gBAAiB,sBACjBC,aAAc,mBACdC,aAAc,QACdC,cAAe,oBACfC,mBAAoB,yBACpBC,iBAAkB,uBAClBC,eAAgB,UAChBC,wBAAyB,gCACzBC,aAAc,mBACdC,cAAe,oBACfC,eAAgB,qBAChBC,gCAAiC,CAC7B,WACA,2BACA,uCACFjI,KAAK,MACPkI,iBAAkB,wBAEXC,EAAU,CACjBC,+BAAgC,GAChCC,8BAA+B,KErD/BC,EAAgC,WAChC,SAASA,IACLxO,KAAKyO,OAAS,IAAInE,GAC1B,CAqDI,OA/CAkE,EAAehJ,UAAUkJ,QAAU,SAAUtJ,EAAKkG,GAC9C,IAAIL,EAAQjL,KACZA,KAAK2O,OAAOvJ,GACZ,IAAIwJ,EAAUC,uBAAsB,SAAUC,GAC1C7D,EAAMwD,OAAOzM,OAAOoD,GAGpBkG,EAASwD,EACrB,IACQ9O,KAAKyO,OAAOpF,IAAIjE,EAAKwJ,EACxB,EAKDJ,EAAehJ,UAAUmJ,OAAS,SAAUvJ,GACxC,IAAI2J,EAAQ/O,KAAKyO,OAAOrF,IAAIhE,GACxB2J,IACAC,qBAAqBD,GACrB/O,KAAKyO,OAAOzM,OAAOoD,GAE1B,EAIDoJ,EAAehJ,UAAUyJ,UAAY,WACjC,IAAIhE,EAAQjL,KAIZA,KAAKyO,OAAOrH,SAAQ,SAAU8H,EAAG9J,GAC7B6F,EAAM0D,OAAOvJ,EACzB,GACK,EAIDoJ,EAAehJ,UAAU2J,SAAW,WAChC,IAAIC,EAAQ,GAOZ,OAHApP,KAAKyO,OAAOrH,SAAQ,SAAU8H,EAAG9J,GAC7BgK,EAAM7O,KAAK6E,EACvB,IACegK,CACV,EACMZ,CACX,KDxDA,SAAWlC,GACPA,EAA+B,gBAAI,uBACnCA,EAAkC,mBAAI,oBACzC,CAHD,CAGGA,IAAkBA,EAAgB,CAAA,IACrC,IAAI+C,EAAqC,SAAUC,GAE/C,SAASD,EAAoBE,GACzB,IAAItE,EAAQqE,EAAOnH,KAAKnI,KAAMwP,EAASA,EAAS,CAAE,EAAEH,EAAoBI,gBAAiBF,KAAavP,KAoBtG,OAnBAiL,EAAMyE,YAAa,EACnBzE,EAAM0E,cAAe,EACrB1E,EAAM2E,eAAiB,EACvB3E,EAAM4E,eAAiB,EACvB5E,EAAM6E,gBAAkBzC,EAAQK,aAChCzC,EAAM8E,iBAAmB1C,EAAQK,aACjCzC,EAAM+E,kBAAmB,EACzB/E,EAAMgF,mBAAoB,EAC1BhF,EAAMiF,6BAA+B7C,EAAQc,gCAC7ClD,EAAMkF,UAAY,IAAI3B,EACtBvD,EAAMmF,qBAAuB,WACzBnF,EAAMoF,mBACT,EACDpF,EAAMqF,oBAAsB,WACxBrF,EAAMsF,QACT,EACDtF,EAAMuF,+BAAiC,WACnCvF,EAAMsF,QACT,EACMtF,CACf,CAkUI,OAzVAwF,EAAUpB,EAAqBC,GAwB/BpK,OAAOC,eAAekK,EAAqB,aAAc,CACrDjG,IAAK,WACD,OAAOmD,CACV,EACDxH,YAAY,EACZC,cAAc,IAElBE,OAAOC,eAAekK,EAAqB,UAAW,CAClDjG,IAAK,WACD,OAAOiE,CACV,EACDtI,YAAY,EACZC,cAAc,IAElBE,OAAOC,eAAekK,EAAqB,UAAW,CAClDjG,IAAK,WACD,OAAOiF,CACV,EACDtJ,YAAY,EACZC,cAAc,IAElBE,OAAOC,eAAekK,EAAqB,iBAAkB,CACzDjG,IAAK,WACD,MAAO,CACHsH,aAAc,WAAiC,EAC/CC,SAAU,WAAiC,EAC3CV,kBAAmB,WAAc,OAAO,CAAQ,EAChDW,mBAAoB,WAAiC,EACrDC,mBAAoB,WAAc,OAAO,CAAQ,EACjDC,mBAAoB,WAAc,MAAO,EAAK,EAC9CC,kBAAmB,WAAc,OAAO,IAAO,EAC/CC,SAAU,WAAc,OAAO,CAAQ,EACvCC,oBAAqB,WAAc,OAAO,CAAQ,EAClDC,aAAc,WAAiC,EAC/CC,cAAe,WAAiC,EAChDC,aAAc,WAAiC,EAC/CC,cAAe,WAAiC,EAChDC,aAAc,WAAiC,EAC/CC,gBAAiB,WAAiC,EAClDC,YAAa,WAAiC,EAC9CC,eAAgB,WAAiC,EACjDC,UAAW,WAAiC,EAC5CC,4BAA6B,WAAiC,EAC9DC,8BAA+B,WAAiC,EAChEC,yBAA0B,WAAc,OAAO,CAAQ,EACvDC,4BAA6B,WAAc,OAAO,CAAQ,EAC1DC,2BAA4B,WAAiC,EAC7DC,6BAA8B,WAAiC,EAEtE,EACDjN,YAAY,EACZC,cAAc,IAElBqK,EAAoB7J,UAAUyM,KAAO,WAC7BjS,KAAKuP,QAAQyB,SAASzE,EAAWM,UACjC7M,KAAKkS,qBAAoB,GAE7BlS,KAAK2P,aAAe3P,KAAKuP,QAAQyB,SAASzE,EAAWO,WACxD,EACDuC,EAAoB7J,UAAU2M,QAAU,WAChCnS,KAAK6P,iBACLuC,aAAapS,KAAK6P,gBAClB7P,KAAKqS,2BAELrS,KAAK2P,cACL3P,KAAKuP,QAAQqC,8BAA8B,SAAU5R,KAAKoQ,sBAE9DpQ,KAAKmQ,UAAUlB,YACfjP,KAAKuP,QAAQyC,6BAA6B,SAAUhS,KAAKsQ,qBACzDtQ,KAAKuP,QAAQyC,6BAA6B,oBAAqBhS,KAAKwQ,+BACvE,EACDnB,EAAoB7J,UAAU8M,KAAO,SAAUC,GAC3C,IAAItH,EAAQjL,KACZA,KAAK0P,YAAa,EAClB1P,KAAKuP,QAAQ8B,gBACbrR,KAAKuP,QAAQoB,SAASpE,EAAWG,SAC7B1M,KAAK2P,cAIL3P,KAAKuP,QAAQoC,4BAA4B,SAAU3R,KAAKoQ,sBAExDmC,GAAiBA,EAAcC,yBAC/BxS,KAAKuP,QAAQoB,SAASpE,EAAWa,cAErCpN,KAAKuP,QAAQwC,2BAA2B,SAAU/R,KAAKsQ,qBACvDtQ,KAAKuP,QAAQwC,2BAA2B,oBAAqB/R,KAAKwQ,gCAGlExQ,KAAKyS,uBAAsB,WACvBxH,EAAMsE,QAAQoB,SAASpE,EAAWE,MAClCxB,EAAMsE,QAAQmB,aAAanE,EAAWK,aACtC3B,EAAMsF,SACNtF,EAAM4E,eAAiB6C,YAAW,WAC9BzH,EAAMoH,0BACNpH,EAAMsE,QAAQmC,UAAUzG,EAAMsE,QAAQwB,qBACtC9F,EAAMsE,QAAQ6B,cAC9B,GAAe/C,EAAQE,8BACvB,GACK,EACDc,EAAoB7J,UAAUmN,MAAQ,SAAUC,GAC5C,IAAI3H,EAAQjL,UACG,IAAX4S,IAAqBA,EAAS,IAC7B5S,KAAK0P,aAKV1P,KAAK0P,YAAa,EAClB1P,KAAKuP,QAAQ4B,cAAcyB,GAC3B5S,KAAKuP,QAAQoB,SAASpE,EAAWC,SACjCxM,KAAKuP,QAAQiC,YAAYjF,EAAWE,MACpCzM,KAAKuP,QAAQgC,gBAAgBhF,EAAWK,aACpC5M,KAAK2P,cACL3P,KAAKuP,QAAQqC,8BAA8B,SAAU5R,KAAKoQ,sBAE9DpQ,KAAKuP,QAAQyC,6BAA6B,SAAUhS,KAAKsQ,qBACzDtQ,KAAKuP,QAAQyC,6BAA6B,oBAAqBhS,KAAKwQ,gCACpExB,qBAAqBhP,KAAK4P,gBAC1B5P,KAAK4P,eAAiB,EACtBwC,aAAapS,KAAK6P,gBAClB7P,KAAK6P,eAAiB6C,YAAW,WAC7BzH,EAAMsE,QAAQ+B,eACdrG,EAAMoH,0BACNpH,EAAMsE,QAAQ2B,aAAa0B,EACvC,GAAWvE,EAAQC,gCACd,EAKDe,EAAoB7J,UAAUqN,iBAAmB,WAC7C,IAAI5H,EAAQjL,KACZA,KAAKuP,QAAQoB,SAASpE,EAAWW,uBACjClN,KAAKyS,uBAAsB,WACvBxH,EAAMsE,QAAQoB,SAASpE,EAAWU,oBAC9C,GACK,EAKDoC,EAAoB7J,UAAUsN,iBAAmB,WAC7C9S,KAAKuP,QAAQiC,YAAYjF,EAAWU,qBACpCjN,KAAKuP,QAAQoB,SAASpE,EAAWY,qBACpC,EAKDkC,EAAoB7J,UAAUuN,gCAAkC,WAC5D/S,KAAKuP,QAAQiC,YAAYjF,EAAWY,sBACpCnN,KAAKuP,QAAQiC,YAAYjF,EAAWW,sBACvC,EACDmC,EAAoB7J,UAAUwN,OAAS,WACnC,OAAOhT,KAAK0P,UACf,EACDL,EAAoB7J,UAAUyN,mBAAqB,WAC/C,OAAOjT,KAAK8P,eACf,EACDT,EAAoB7J,UAAU0N,mBAAqB,SAAUN,GACzD5S,KAAK8P,gBAAkB8C,CAC1B,EACDvD,EAAoB7J,UAAU2N,oBAAsB,WAChD,OAAOnT,KAAK+P,gBACf,EACDV,EAAoB7J,UAAU4N,oBAAsB,SAAUR,GAC1D5S,KAAK+P,iBAAmB6C,CAC3B,EACDvD,EAAoB7J,UAAU6N,oBAAsB,WAChD,OAAOrT,KAAKgQ,gBACf,EACDX,EAAoB7J,UAAU0M,oBAAsB,SAAUoB,GAC1DtT,KAAKgQ,iBAAmBsD,CAC3B,EACDjE,EAAoB7J,UAAU+N,gCAAkC,WAC5D,OAAOvT,KAAKkQ,4BACf,EACDb,EAAoB7J,UAAUgO,gCAAkC,SAAUC,GACtEzT,KAAKkQ,6BAA+BuD,CACvC,EACDpE,EAAoB7J,UAAU+K,OAAS,WACnC,IAAItF,EAAQjL,KACZA,KAAKmQ,UAAUzB,QAAQpC,EAAcoH,oBAAoB,WACrDzI,EAAM0I,gBAClB,GACK,EAEDtE,EAAoB7J,UAAUoO,YAAc,SAAUC,GAGlD,GAFc7T,KAAKuP,QAAQsB,mBAAmBgD,EAAIxQ,OAAQgK,EAAQa,iBAEzB,KAA1BlO,KAAK+P,iBAChB/P,KAAK2S,MAAM3S,KAAK+P,sBAEf,CACD,IAAI6C,EAAS5S,KAAKuP,QAAQuB,mBAAmB+C,GACzCjB,GACA5S,KAAK2S,MAAMC,EAE3B,CACK,EAEDvD,EAAoB7J,UAAUsO,cAAgB,SAAUD,GACpD,IAAIE,EAAsB,UAAZF,EAAIzO,KAAmC,KAAhByO,EAAIG,QACzC,GAAKD,IAGQ/T,KAAKuP,QAAQuB,mBAAmB+C,GAC7C,CAkBA,IAAIxQ,EAASwQ,EAAII,aAAeJ,EAAII,eAAe,GAAKJ,EAAIxQ,OACxD6Q,GAAYlU,KAAKkQ,+BAChBlQ,KAAKuP,QAAQsB,mBAAmBxN,EAAQrD,KAAKkQ,8BAE9C6D,GAAWG,GACXlU,KAAKuP,QAAQqB,oBAnBzB,CAqBK,EAEDvB,EAAoB7J,UAAU2O,sBAAwB,SAAUN,IACjC,WAAZA,EAAIzO,KAAoC,KAAhByO,EAAIG,UACF,KAAzBhU,KAAK8P,iBACjB9P,KAAK2S,MAAM3S,KAAK8P,gBAEvB,EAMDT,EAAoB7J,UAAU6K,kBAAoB,WAC9C,IAAIpF,EAAQjL,KAGZA,KAAKmQ,UAAUzB,QAAQpC,EAAc8H,iBAAiB,WAClDnJ,EAAMoJ,4BACNpJ,EAAMqJ,2BAClB,GACK,EACDjF,EAAoB7J,UAAUmO,eAAiB,WACvC3T,KAAKgQ,kBACLhQ,KAAKuU,uBAETvU,KAAKwU,yBACR,EACDnF,EAAoB7J,UAAU6M,wBAA0B,WACpDrS,KAAK6P,eAAiB,EACtB7P,KAAKuP,QAAQiC,YAAYjF,EAAWG,SACpC1M,KAAKuP,QAAQiC,YAAYjF,EAAWC,QACvC,EAKD6C,EAAoB7J,UAAUiN,sBAAwB,SAAUnH,GAC5D,IAAIL,EAAQjL,KACZgP,qBAAqBhP,KAAK4P,gBAC1B5P,KAAK4P,eAAiBf,uBAAsB,WACxC5D,EAAM2E,eAAiB,EACvBwC,aAAanH,EAAM4E,gBACnB5E,EAAM4E,eAAiB6C,WAAWpH,EAAU,EACxD,GACK,EACD+D,EAAoB7J,UAAU+O,qBAAuB,WAEjDvU,KAAKuP,QAAQiC,YAAYjF,EAAWM,SACpC,IAAIoD,EAAoBjQ,KAAKuP,QAAQU,oBACjCA,GACAjQ,KAAKuP,QAAQoB,SAASpE,EAAWM,SAEjCoD,IAAsBjQ,KAAKiQ,oBAC3BjQ,KAAKuP,QAAQkC,iBACbzR,KAAKiQ,kBAAoBA,EAEhC,EACDZ,EAAoB7J,UAAUgP,wBAA0B,WAGpDxU,KAAKuP,QAAQiC,YAAYjF,EAAWI,YAChC3M,KAAKuP,QAAQ0B,wBACbjR,KAAKuP,QAAQoB,SAASpE,EAAWI,YAC7B3M,KAAK2P,eAGL3P,KAAKqU,4BACLrU,KAAKsU,6BAGhB,EACDjF,EAAoB7J,UAAU6O,0BAA4B,WACjDrU,KAAKuP,QAAQsC,2BAGT7R,KAAKuP,QAAQyB,SAASzE,EAAWQ,wBACtC/M,KAAKuP,QAAQiC,YAAYjF,EAAWQ,uBAHpC/M,KAAKuP,QAAQoB,SAASpE,EAAWQ,sBAKxC,EACDsC,EAAoB7J,UAAU8O,0BAA4B,WACjDtU,KAAKuP,QAAQuC,8BAGT9R,KAAKuP,QAAQyB,SAASzE,EAAWS,wBACtChN,KAAKuP,QAAQiC,YAAYjF,EAAWS,uBAHpChN,KAAKuP,QAAQoB,SAASpE,EAAWS,sBAKxC,EACMqC,CACX,CA3VuB,CA2VrBoF,GEhWK,SAASC,EAAaC,GAEzB,YADkB,IAAdA,IAAwBA,EAAY/O,UAK5C,SAA+B+O,QACT,IAAdA,IAAwBA,EAAY/O,QAGxC,IAAIgP,GAAmB,EACvB,IACI,IAAIC,EAAU,CAGV,WAAIC,GAEA,OADAF,GAAmB,GACZ,CACvB,GAEYG,EAAU,WAAe,EAC7BJ,EAAUtT,SAASuJ,iBAAiB,OAAQmK,EAASF,GACrDF,EAAUtT,SAAS2T,oBAAoB,OAAQD,EAASF,EAChE,CACI,MAAOI,GACHL,GAAmB,CAC3B,CACI,OAAOA,CACX,CA1BWM,CAAsBP,IACzB,CAAEG,SAAS,EAEnB,CCZA,MAAMK,EAAmB9T,SAASqD,kBAC3B,MAAM0Q,UAAmBC,EAC5B,WAAAtV,GACIuV,SAASC,WACTvV,KAAKwV,aAAc,EACnBxV,KAAKyV,SAAU,EACfzV,KAAK0V,QAAU,GACf1V,KAAK+P,iBAAmB,QACxB/P,KAAK8P,gBAAkB,QACvB9P,KAAKsS,MAAO,EACZtS,KAAK2V,cAAgB,QACrB3V,KAAK4V,gBAAkB,eACvB5V,KAAK6V,sBAAwB,qBAC7B7V,KAAK8V,mCAAqC,GAC1C9V,KAAK+V,mBAAqB1G,EAC1BrP,KAAKgW,iBAAmB,KACxBhW,KAAKiW,mBAAqB,KAC1BjW,KAAKkW,2BAA6B,IAC1C,CACI,gCAAIhG,CAA6BuD,GACzBzT,KAAKmW,cACLnW,KAAKmW,cAAc3C,gCAAgCC,GAGnDzT,KAAK8V,mCAAqCrC,CAEtD,CAII,gCAAIvD,GACA,OAAOlQ,KAAKmW,cACRnW,KAAKmW,cAAc5C,kCACnBvT,KAAK8V,kCACjB,CACI,iBAAIM,GACA,IAAI5R,EAAgBxE,KAAKqW,YAAY7R,gBACrCA,EAAgBA,EAAc8R,QAAQ/O,GAASA,aAAgB6D,cAC/D,MAAMmL,EAAS/R,EAAc,GAC7B,OAAO+R,GAAkB,IACjC,CACI,gBAAAC,CAAiBC,EAAM7D,GACnB,MACM8D,EAAK,IAAIC,YAAYF,EADd,CAAEG,OAAQhE,EAAS,CAAEA,UAAW,KAE7C5S,KAAK6W,cAAcH,EAC3B,CACI,iBAAA3F,GACI,MAAM+F,EAAoB,IAAI9W,KAAK6V,yBAE7BkB,EAAa/W,KAAKiM,cAAc6K,GACtC,GAAIC,EACA,OAAOA,EAGX,MACMC,EADchX,KAAKqW,YACQ7R,cAAc,CAAEC,SAAS,IACpDwS,EAAsBjX,KAAKkX,4BAA4BF,EAAchX,KAAK6V,uBAChF,GAAIoB,EACA,OAAOA,EAEX,MACME,EADgBnX,KAAKoX,cACU5S,cAAc,CAAEC,SAAS,IACxD4S,EAAwBrX,KAAKkX,4BAA4BC,EAAgBnX,KAAK6V,uBACpF,GAAIwB,EACA,OAAOA,EAEX,MACMC,EADctX,KAAKuX,YACQ/S,cAAc,CAAEC,SAAS,IAE1D,OADyBzE,KAAKkX,4BAA4BI,EAActX,KAAK6V,sBAErF,CACI,2BAAAqB,CAA4B7S,EAAOmT,GAC/B,IAAK,MAAMjQ,KAAQlD,EACf,GAAMkD,aAAgB6D,YAAtB,CAGA,GAAI7D,EAAKd,aAAa+Q,GAClB,OAAOjQ,EAEN,CACD,MAAMkQ,EAAYlQ,EAAK0E,cAAc,IAAIuL,MACzC,GAAIC,EACA,OAAOA,CAE3B,CATA,CAWQ,OAAO,IACf,CACI,aAAAC,GACI,OAAOxS,OAAOyS,OAAOzS,OAAOyS,OAAO,CAAA,EAAIC,EAAkB5X,KAAK6X,UAAW,CAAEnH,aAAc,IAAMrP,SAASC,KAAK4K,MAAM4L,SAAW,SAAUvG,gBAAiB,IAAMlQ,SAASC,KAAK4K,MAAM4L,SAAW,GAAI7H,kBAAmB,IAAMjQ,KAAKyV,QAAS7E,mBAAoB,KACrP,MAAMmH,EAAU/X,KAAKoW,cACjB2B,GACAA,EAAQC,OAC5B,EACenH,mBAAoB,CAACxN,EAAQoQ,MAAapQ,GAASyC,EAAQzC,EAAQoQ,GAAmB3C,mBAAqBmH,IAC1G,IAAKA,EAAE5U,OACH,MAAO,GAEX,MAAM7C,EAAU0X,EAAQD,EAAE5U,OAAQ,IAAIrD,KAAK4V,oBAE3C,OADepV,GAAWA,EAAQmG,aAAa3G,KAAK4V,gBACvC,EACd7E,kBAAmB,IACX/Q,KAAK+Q,oBACbE,oBAAqB,KACpB,MAAMkH,EAAKnY,KAAKoY,eAChB,QAAOD,GAAKA,EAAGE,aAAeF,EAAGG,YAAoB,EACtDpH,aAAe0B,GAAW5S,KAAKwW,iBAAiB,SAAU5D,GAASzB,cAAgByB,IAC7E5S,KAAKuY,yBAINvY,KAAKsS,MAAO,GAEhBtS,KAAKwW,iBAAiB,UAAW5D,EAAO,EACzCxB,aAAc,IAAMpR,KAAKwW,iBAAiB,UAAWnF,cAAe,KACnErR,KAAKsS,MAAO,EACZtS,KAAKwW,iBAAiB,UAAU,EACjC/E,eAAgB,OAAWH,aAAc,KACxC6D,EAAiB1U,OAAOT,KAAK,EAC9B0R,UAAYyG,IACNnY,KAAKwY,cAMVrD,EAAiB5U,KAAKP,MAClBmY,GACAA,EAAGlQ,QACvB,EACe0J,4BAA6B,CAAC8G,EAAS1D,KAC3B/U,KAAKoY,eACbxN,iBAAiB6N,EAAS1D,EAAQ,EACtCnD,8BAA+B,CAAC6G,EAAS1D,KAC7B/U,KAAKoY,eACbpD,oBAAoByD,EAAS1D,EAAQ,EACzClD,yBAA0B,KACzB,MAAMsG,EAAKnY,KAAKoY,eAChB,QAAOD,GAAsB,IAAjBA,EAAGO,SAAuB,EACvC5G,4BAA6B,KAC5B,MAAMqG,EAAKnY,KAAKoY,eAChB,QAAOD,GACHQ,KAAKC,KAAKT,EAAGE,aAAeF,EAAGO,aAAeP,EAAGU,YAC5C,EACV9G,2BAA4B,CAAC0G,EAAS1D,KACrCnP,OAAOgF,iBAAiB6N,EAAS1D,EAASL,IAAe,EAC1D1C,6BAA8B,CAACyG,EAAS1D,KACvCnP,OAAOoP,oBAAoByD,EAAS1D,EAASL,IAAe,GAE5E,CACI,MAAAoE,GACI,MAAMC,EAAU,CACZ,CAACxM,EAAWM,SAAU7M,KAAKyV,SAE/B,IAAIC,EAAUsD,CAAK,GACfhZ,KAAK0V,UACLA,EAAU1V,KAAKiZ,iBAEnB,MAAMC,EAAiB,CACnB,uBAAwBlZ,KAAKwV,aAEjC,OAAOwD,CAAK;6BACSG,EAASJ;;;;;;;YAO1BrD;;;;;;uBAMWyD,EAASD;;;;;;;;;;;WAYhC,CACI,aAAAD,GACI,OAAOD,CAAK;iDAC6BhZ,KAAK0V,cACtD,CACI,YAAA0D,GACI9D,MAAM8D,eACNpZ,KAAKmW,cAAcjE,qBAAoB,GACnClS,KAAK8V,mCACL9V,KAAKkQ,6BACDlQ,KAAK8V,mCAGT9V,KAAKkQ,6BAA+B,CAChClQ,KAAKkQ,6BAA8B,eACnC,yBAA0B,4BAC5BhK,KAAK,MAEXlG,KAAKgW,iBAAmBhW,KAAKmW,cAAcvC,YAAYjR,KAAK3C,KAAKmW,eACjEnW,KAAKiW,mBAAqBjW,KAAKmW,cAAcrC,cAAcnR,KAAK3C,KAAKmW,eACrEnW,KAAKkW,2BACDlW,KAAKmW,cAAchC,sBAAsBxR,KAAK3C,KAAKmW,cAC/D,CACI,iBAAAkD,GACI/D,MAAM+D,oBACFrZ,KAAKsS,MAAQtS,KAAKmW,gBAAkBnW,KAAKmW,cAAcnD,WAGvDhT,KAAKsZ,oBACLtZ,KAAKmW,cAAc7D,OAE/B,CACI,oBAAAiH,GACIjE,MAAMiE,uBACFvZ,KAAKsS,MAAQtS,KAAKmW,gBAKlBnW,KAAKwZ,uBACLxZ,KAAKuY,wBAAyB,EAC9BvY,KAAKmW,cAAcxD,MAAM3S,KAAKyZ,eAAiBzZ,KAAK2V,eACpD3V,KAAKuY,wBAAyB,EAC9BvY,KAAKyZ,mBAAgBxX,EAOrBkT,EAAiB1U,OAAOT,MAEpC,CACI,WAAA0Z,GACI1Z,KAAKmW,cAAc5F,QAC3B,CACI,KAAAtI,GACI,MAAM0R,EAAiB3Z,KAAK+Q,oBAC5B4I,GAAkBA,EAAe1R,OACzC,CACI,IAAAD,GACI,IAAKhI,KAAKmE,WACN,OAEJ,MAAMyV,EAAW5Z,KAAKmE,WAAWyD,cACjC,GAAIgS,EACIA,aAAoBxO,aACpBwO,EAAS5R,WAGZ,CACD,MAAMF,EAAO9H,KAAK6Z,cACZD,EAAW9R,aAAgBgS,SAAWhS,EAAKF,cAAgB,KAC7DgS,aAAoBxO,aACpBwO,EAAS5R,MAEzB,CACA,CACI,iBAAAsR,GACQtZ,KAAKgW,kBACLhW,KAAK6X,QAAQjN,iBAAiB,QAAS5K,KAAKgW,kBAE5ChW,KAAKiW,oBACLjW,KAAK6X,QAAQjN,iBAAiB,UAAW5K,KAAKiW,mBAAoBvB,KAElE1U,KAAKkW,4BACL7U,SAASuJ,iBAAiB,UAAW5K,KAAKkW,2BAA4BxB,IAElF,CACI,oBAAA8E,GACQxZ,KAAKgW,kBACLhW,KAAK6X,QAAQ7C,oBAAoB,QAAShV,KAAKgW,kBAE/ChW,KAAKiW,oBACLjW,KAAK6X,QAAQ7C,oBAAoB,UAAWhV,KAAKiW,oBAEjDjW,KAAKkW,4BACL7U,SAAS2T,oBAAoB,UAAWhV,KAAKkW,2BAEzD,CACI,KAAAvD,GACI3S,KAAKsS,MAAO,CACpB,CACI,IAAAyH,GACI/Z,KAAKsS,MAAO,CACpB,EAEA0H,EAAW,CACPC,EAAM,gBACP7E,EAAW5P,UAAW,eAAW,GACpCwU,EAAW,CACPC,EAAM,+BACP7E,EAAW5P,UAAW,mBAAe,GACxCwU,EAAW,CACPC,EAAM,iCACP7E,EAAW5P,UAAW,qBAAiB,GAC1CwU,EAAW,CACPC,EAAM,iBACP7E,EAAW5P,UAAW,mBAAe,GACxCwU,EAAW,CACPC,EAAM,yBACP7E,EAAW5P,UAAW,sBAAkB,GAC3CwU,EAAW,CACPC,EAAM,mBACP7E,EAAW5P,UAAW,wBAAoB,GAC7CwU,EAAW,CACPE,EAAS,CAAElR,KAAMmR,WAClB/E,EAAW5P,UAAW,mBAAe,GACxCwU,EAAW,CACPE,EAAS,CAAElR,KAAMmR,UACjBC,GAAS,WACLpa,KAAK0Z,aACR,KACFtE,EAAW5P,UAAW,eAAW,GACpCwU,EAAW,CACPE,EAAS,CAAElR,KAAMqR,UAClBjF,EAAW5P,UAAW,eAAW,GACpCwU,EAAW,CACPE,EAAS,CAAElR,KAAMqR,SACjBD,GAAS,SAAUE,GACfta,KAAKmW,cAAc/C,oBAAoBkH,EAC1C,KACFlF,EAAW5P,UAAW,wBAAoB,GAC7CwU,EAAW,CACPE,EAAS,CAAElR,KAAMqR,SACjBD,GAAS,SAAUE,GACfta,KAAKmW,cAAcjD,mBAAmBoH,EACzC,KACFlF,EAAW5P,UAAW,uBAAmB,GAC5CwU,EAAW,CACPE,EAAS,CAAElR,KAAMmR,QAASI,SAAS,IACnCH,GAAS,SAAUpH,GAKXhT,KAAKmW,eAAiBnW,KAAKwY,cACvBxF,GACAhT,KAAKsZ,oBACLtZ,KAAKmW,cAAc7D,SAGnBtS,KAAKwZ,uBACLxZ,KAAKmW,cAAcxD,MAAM3S,KAAKyZ,eAAiBzZ,KAAK2V,eACpD3V,KAAKyZ,mBAAgBxX,GAGhC,KACFmT,EAAW5P,UAAW,YAAQ,GACjCwU,EAAW,CACPE,KACD9E,EAAW5P,UAAW,qBAAiB,GAC1CwU,EAAW,CACPE,KACD9E,EAAW5P,UAAW,uBAAmB,GAC5CwU,EAAW,CACPE,KACD9E,EAAW5P,UAAW,6BAAyB,GCzX3C,MAAMgV,EAASC,CAAI,mpaCK1B,IAAIC,EAAS,cAAqBtF,IAElCsF,EAAOF,OAAS,CAACA,GACjBE,EAASV,EAAW,CAChBW,EAAc,eACfD","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}