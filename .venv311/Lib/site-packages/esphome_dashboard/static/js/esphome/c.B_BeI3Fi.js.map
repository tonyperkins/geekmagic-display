{"version":3,"file":"c.B_BeI3Fi.js","sources":["../../../../src/util/console-color.ts","../../../../src/components/remote-process.ts","../../../../src/util/basename.ts","../../../../src/components/process-dialog.ts"],"sourcesContent":["interface ConsoleState {\n  bold: boolean;\n  italic: boolean;\n  underline: boolean;\n  strikethrough: boolean;\n  foregroundColor: string | null;\n  backgroundColor: string | null;\n  carriageReturn: boolean;\n  lines: string[];\n  secret: boolean;\n}\n\nexport class ColoredConsole {\n  public state: ConsoleState = {\n    bold: false,\n    italic: false,\n    underline: false,\n    strikethrough: false,\n    foregroundColor: null,\n    backgroundColor: null,\n    carriageReturn: false,\n    lines: [],\n    secret: false,\n  };\n\n  constructor(public targetElement: HTMLElement) {}\n\n  logs(): string {\n    return this.targetElement.innerText;\n  }\n\n  processLine(line: string): Element {\n    const re = /(?:\\x1b|\\\\033)(?:\\[(.*?)[@-~]|\\].*?(?:\\x07|\\x07\\\\))/g;\n    let i = 0;\n\n    const lineSpan = document.createElement(\"span\");\n    lineSpan.classList.add(\"line\");\n\n    const addSpan = (content: string) => {\n      if (content === \"\") return;\n\n      const span = document.createElement(\"span\");\n      if (this.state.bold) span.classList.add(\"log-bold\");\n      if (this.state.italic) span.classList.add(\"log-italic\");\n      if (this.state.underline) span.classList.add(\"log-underline\");\n      if (this.state.strikethrough) span.classList.add(\"log-strikethrough\");\n      if (this.state.secret) span.classList.add(\"log-secret\");\n      if (this.state.foregroundColor !== null)\n        span.classList.add(`log-fg-${this.state.foregroundColor}`);\n      if (this.state.backgroundColor !== null)\n        span.classList.add(`log-bg-${this.state.backgroundColor}`);\n      span.appendChild(document.createTextNode(content));\n      lineSpan.appendChild(span);\n\n      if (this.state.secret) {\n        const redacted = document.createElement(\"span\");\n        redacted.classList.add(\"log-secret-redacted\");\n        redacted.appendChild(document.createTextNode(\"[redacted]\"));\n        lineSpan.appendChild(redacted);\n      }\n    };\n\n    while (true) {\n      const match = re.exec(line);\n      if (match === null) break;\n\n      const j = match.index;\n      addSpan(line.substring(i, j));\n      i = j + match[0].length;\n\n      if (match[1] === undefined) continue;\n\n      for (const colorCode of match[1].split(\";\")) {\n        switch (parseInt(colorCode)) {\n          case 0:\n            // reset\n            this.state.bold = false;\n            this.state.italic = false;\n            this.state.underline = false;\n            this.state.strikethrough = false;\n            this.state.foregroundColor = null;\n            this.state.backgroundColor = null;\n            this.state.secret = false;\n            break;\n          case 1:\n            this.state.bold = true;\n            break;\n          case 3:\n            this.state.italic = true;\n            break;\n          case 4:\n            this.state.underline = true;\n            break;\n          case 5:\n            this.state.secret = true;\n            break;\n          case 6:\n            this.state.secret = false;\n            break;\n          case 9:\n            this.state.strikethrough = true;\n            break;\n          case 22:\n            this.state.bold = false;\n            break;\n          case 23:\n            this.state.italic = false;\n            break;\n          case 24:\n            this.state.underline = false;\n            break;\n          case 29:\n            this.state.strikethrough = false;\n            break;\n          case 30:\n            this.state.foregroundColor = \"black\";\n            break;\n          case 31:\n            this.state.foregroundColor = \"red\";\n            break;\n          case 32:\n            this.state.foregroundColor = \"green\";\n            break;\n          case 33:\n            this.state.foregroundColor = \"yellow\";\n            break;\n          case 34:\n            this.state.foregroundColor = \"blue\";\n            break;\n          case 35:\n            this.state.foregroundColor = \"magenta\";\n            break;\n          case 36:\n            this.state.foregroundColor = \"cyan\";\n            break;\n          case 37:\n            this.state.foregroundColor = \"white\";\n            break;\n          case 39:\n            this.state.foregroundColor = null;\n            break;\n          case 41:\n            this.state.backgroundColor = \"red\";\n            break;\n          case 42:\n            this.state.backgroundColor = \"green\";\n            break;\n          case 43:\n            this.state.backgroundColor = \"yellow\";\n            break;\n          case 44:\n            this.state.backgroundColor = \"blue\";\n            break;\n          case 45:\n            this.state.backgroundColor = \"magenta\";\n            break;\n          case 46:\n            this.state.backgroundColor = \"cyan\";\n            break;\n          case 47:\n            this.state.backgroundColor = \"white\";\n            break;\n          case 40:\n          case 49:\n            this.state.backgroundColor = null;\n            break;\n        }\n      }\n    }\n    addSpan(line.substring(i));\n    return lineSpan;\n  }\n\n  processLines() {\n    const atBottom =\n      this.targetElement.scrollTop >\n      this.targetElement.scrollHeight - this.targetElement.offsetHeight - 50;\n    const prevCarriageReturn = this.state.carriageReturn;\n    const fragment = document.createDocumentFragment();\n\n    if (this.state.lines.length == 0) {\n      return;\n    }\n\n    for (const line of this.state.lines) {\n      if (this.state.carriageReturn && line !== \"\\n\") {\n        if (fragment.childElementCount) {\n          fragment.removeChild(fragment.lastChild!);\n        }\n      }\n      fragment.appendChild(this.processLine(line));\n      this.state.carriageReturn = line.includes(\"\\r\");\n    }\n\n    if (prevCarriageReturn && this.state.lines[0] !== \"\\n\") {\n      this.targetElement.replaceChild(fragment, this.targetElement.lastChild!);\n    } else {\n      this.targetElement.appendChild(fragment);\n    }\n\n    this.state.lines = [];\n\n    // Keep scroll at bottom\n    if (atBottom) {\n      this.targetElement.scrollTop = this.targetElement.scrollHeight;\n    }\n  }\n\n  addLine(line: string) {\n    // Processing of lines is deferred for performance reasons\n    if (this.state.lines.length == 0) {\n      setTimeout(() => this.processLines(), 0);\n    }\n    this.state.lines.push(line);\n  }\n}\n\nexport const coloredConsoleStyles = `\n  .log {\n    flex: 1;\n    background-color: #1c1c1c;\n    font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier,\n      monospace;\n    font-size: 12px;\n    padding: 16px;\n    overflow: auto;\n    line-height: 1.45;\n    border-radius: 3px;\n    white-space: pre-wrap;\n    overflow-wrap: break-word;\n    color: #ddd;\n  }\n\n  .log-bold {\n    font-weight: bold;\n  }\n  .log-italic {\n    font-style: italic;\n  }\n  .log-underline {\n    text-decoration: underline;\n  }\n  .log-strikethrough {\n    text-decoration: line-through;\n  }\n  .log-underline.log-strikethrough {\n    text-decoration: underline line-through;\n  }\n  .log-secret {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  .log-secret-redacted {\n    opacity: 0;\n    width: 1px;\n    font-size: 1px;\n  }\n  .log-fg-black {\n    color: rgb(128, 128, 128);\n  }\n  .log-fg-red {\n    color: rgb(255, 0, 0);\n  }\n  .log-fg-green {\n    color: rgb(0, 255, 0);\n  }\n  .log-fg-yellow {\n    color: rgb(255, 255, 0);\n  }\n  .log-fg-blue {\n    color: rgb(0, 0, 255);\n  }\n  .log-fg-magenta {\n    color: rgb(255, 0, 255);\n  }\n  .log-fg-cyan {\n    color: rgb(0, 255, 255);\n  }\n  .log-fg-white {\n    color: rgb(187, 187, 187);\n  }\n  .log-bg-black {\n    background-color: rgb(0, 0, 0);\n  }\n  .log-bg-red {\n    background-color: rgb(255, 0, 0);\n  }\n  .log-bg-green {\n    background-color: rgb(0, 255, 0);\n  }\n  .log-bg-yellow {\n    background-color: rgb(255, 255, 0);\n  }\n  .log-bg-blue {\n    background-color: rgb(0, 0, 255);\n  }\n  .log-bg-magenta {\n    background-color: rgb(255, 0, 255);\n  }\n  .log-bg-cyan {\n    background-color: rgb(0, 255, 255);\n  }\n  .log-bg-white {\n    background-color: rgb(255, 255, 255);\n  }\n`;\n","import { customElement } from \"lit/decorators.js\";\nimport { StreamError, streamLogs } from \"../api\";\nimport { ColoredConsole, coloredConsoleStyles } from \"../util/console-color\";\nimport { fireEvent } from \"../util/fire-event\";\n\n@customElement(\"esphome-remote-process\")\nclass ESPHomeRemoteProcess extends HTMLElement {\n  public type!: \"validate\" | \"logs\" | \"upload\" | \"clean-mqtt\" | \"clean\";\n  public spawnParams!: Record<string, any>;\n\n  private _coloredConsole?: ColoredConsole;\n  private _abortController?: AbortController;\n\n  public logs(): string {\n    return this._coloredConsole?.logs() || \"\";\n  }\n\n  public connectedCallback() {\n    if (this._coloredConsole) {\n      return;\n    }\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n        }\n        ${coloredConsoleStyles}\n      </style>\n      <div class=\"log\"></div>\n    `;\n\n    const coloredConsole = new ColoredConsole(shadowRoot.querySelector(\"div\")!);\n    this._coloredConsole = coloredConsole;\n    this._abortController = new AbortController();\n\n    streamLogs(\n      this.type,\n      this.spawnParams,\n      (line) => {\n        coloredConsole.addLine(line);\n      },\n      this._abortController,\n    ).then(\n      () => {\n        fireEvent(this, \"process-done\", 0);\n      },\n      (error: StreamError) => {\n        fireEvent(this, \"process-done\", error.code);\n      },\n    );\n  }\n\n  public disconnectedCallback() {\n    if (this._abortController) {\n      this._abortController.abort();\n      this._abortController = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"esphome-remote-process\": ESPHomeRemoteProcess;\n  }\n}\n","export const basename = (path: string) => path.replace(/\\.[^/.]+$/, \"\");\n","import { LitElement, html, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport \"@material/mwc-dialog\";\nimport \"@material/mwc-button\";\nimport \"../components/remote-process\";\nimport { fireEvent } from \"../util/fire-event\";\nimport { esphomeDialogStyles } from \"../styles\";\nimport { textDownload } from \"../util/file-download\";\nimport { basename } from \"../util/basename\";\n\n@customElement(\"esphome-process-dialog\")\nexport class ESPHomeProcessDialog extends LitElement {\n  @property() public heading!: string;\n  @property() public spawnParams?: Record<string, any>;\n  @property() public type!: string;\n\n  @property({ type: Boolean, attribute: \"always-show-close\" })\n  public alwaysShowClose = false;\n\n  @state() private _result?: number;\n\n  protected render() {\n    return html`\n      <mwc-dialog\n        open\n        heading=${this.heading}\n        scrimClickAction\n        @closed=${this._handleClose}\n      >\n        <esphome-remote-process\n          .type=${this.type}\n          .spawnParams=${this.spawnParams}\n          @process-done=${this._handleProcessDone}\n        ></esphome-remote-process>\n\n        <mwc-button\n          slot=\"secondaryAction\"\n          label=\"Download Logs\"\n          @click=${this._downloadLogs}\n        ></mwc-button>\n\n        <slot name=\"secondaryAction\" slot=\"secondaryAction\"></slot>\n\n        <mwc-button\n          slot=\"primaryAction\"\n          dialogAction=\"close\"\n          .label=${this._result === undefined && !this.alwaysShowClose\n            ? \"Stop\"\n            : \"Close\"}\n        ></mwc-button>\n      </mwc-dialog>\n    `;\n  }\n\n  private _handleProcessDone(ev: { detail: number }) {\n    this._result = ev.detail;\n  }\n\n  private _handleClose() {\n    fireEvent(this, \"closed\");\n  }\n\n  private _downloadLogs() {\n    let filename = \"logs\";\n    if (this.spawnParams?.configuration) {\n      // Append filename without extension\n      filename += `_${basename(this.spawnParams.configuration)}`;\n    }\n    filename += `_${this.type}.txt`;\n\n    textDownload(\n      this.shadowRoot!.querySelector(\"esphome-remote-process\")!.logs(),\n      filename,\n    );\n  }\n\n  static styles = [\n    esphomeDialogStyles,\n    css`\n      :host {\n        --height-header-footer-padding: 152px;\n      }\n      mwc-dialog {\n        --mdc-dialog-min-width: 95vw;\n        --mdc-dialog-max-width: 95vw;\n      }\n\n      esphome-remote-process {\n        height: calc(90vh - var(--height-header-footer-padding));\n      }\n\n      @media only screen and (max-width: 450px) {\n        esphome-remote-process {\n          height: calc(\n            90vh - var(--height-header-footer-padding) - env(\n                safe-area-inset-bottom\n              )\n          );\n          margin-left: -24px;\n          margin-right: -24px;\n        }\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"esphome-process-dialog\": ESPHomeProcessDialog;\n  }\n}\n"],"names":["ColoredConsole","constructor","targetElement","this","state","bold","italic","underline","strikethrough","foregroundColor","backgroundColor","carriageReturn","lines","secret","logs","innerText","processLine","line","re","i","lineSpan","document","createElement","classList","add","addSpan","content","span","appendChild","createTextNode","redacted","match","exec","j","index","substring","length","undefined","colorCode","split","parseInt","processLines","atBottom","scrollTop","scrollHeight","offsetHeight","prevCarriageReturn","fragment","createDocumentFragment","childElementCount","removeChild","lastChild","includes","replaceChild","addLine","setTimeout","push","coloredConsoleStyles","ESPHomeRemoteProcess","HTMLElement","_a","_coloredConsole","connectedCallback","shadowRoot","attachShadow","mode","innerHTML","coloredConsole","querySelector","_abortController","AbortController","streamLogs","type","spawnParams","then","fireEvent","error","code","disconnectedCallback","abort","__decorate","customElement","basename","path","replace","ESPHomeProcessDialog","LitElement","alwaysShowClose","render","html","heading","_handleClose","_handleProcessDone","_downloadLogs","_result","ev","detail","filename","configuration","textDownload","styles","esphomeDialogStyles","css","property","prototype","Boolean","attribute"],"mappings":"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"}