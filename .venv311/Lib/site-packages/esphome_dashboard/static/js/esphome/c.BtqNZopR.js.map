{"version":3,"file":"c.BtqNZopR.js","sources":["../../../../src/download-type/download-type-dialog.ts"],"sourcesContent":["import { LitElement, html, PropertyValues, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport \"@material/mwc-dialog\";\nimport \"@material/mwc-list/mwc-list-item.js\";\nimport \"@material/mwc-circular-progress\";\nimport \"@material/mwc-button\";\nimport { metaChevronRight } from \"../const\";\nimport { esphomeDialogStyles, esphomeSvgStyles } from \"../styles\";\nimport \"../components/esphome-alert\";\nimport {\n  DownloadType,\n  getDownloadTypes,\n  getDownloadUrl,\n} from \"../api/download\";\n\n@customElement(\"esphome-download-type-dialog\")\nclass ESPHomeDownloadTypeDialog extends LitElement {\n  @property() public configuration!: string;\n  @property() public platformSupportsWebSerial!: boolean;\n\n  @state() private _error?: string;\n  @state() private _downloadTypes?: DownloadType[];\n\n  protected render() {\n    let heading;\n    let content;\n\n    heading = \"What version do you want to download?\";\n    content = html`\n      ${this._error ? html`<div class=\"error\">${this._error}</div>` : \"\"}\n      ${!this._downloadTypes\n        ? html`<div>Checking files to download...</div>`\n        : html`\n            ${this._downloadTypes.map(\n              (type) => html`\n                <mwc-list-item\n                  twoline\n                  hasMeta\n                  dialogAction=\"close\"\n                  @click=${() => this._handleDownload(type)}\n                >\n                  <span>${type.title}</span>\n                  <span slot=\"secondary\">${type.description}</span>\n                  ${metaChevronRight}\n                </mwc-list-item>\n              `,\n            )}\n          `}\n    `;\n\n    return html`\n      <mwc-dialog open heading=${heading} scrimClickAction>\n        ${content}\n        ${this.platformSupportsWebSerial\n          ? html`\n              <a\n                href=\"https://web.esphome.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                class=\"bottom-left\"\n                >Open ESPHome Web</a\n              >\n            `\n          : \"\"}\n\n        <mwc-button\n          no-attention\n          slot=\"primaryAction\"\n          dialogAction=\"close\"\n          label=\"Cancel\"\n        ></mwc-button>\n      </mwc-dialog>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    getDownloadTypes(this.configuration)\n      .then((types) => {\n        if (types.length == 1) {\n          this._handleDownload(types[0]);\n          this._close();\n          return;\n        }\n        this._downloadTypes = types;\n      })\n      .catch((err: any) => {\n        this._error = err.message || err;\n      });\n  }\n\n  private _handleDownload(type: DownloadType) {\n    const link = document.createElement(\"a\");\n    link.download = type.download;\n    link.href = getDownloadUrl(this.configuration, type);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n\n  private _close() {\n    this.shadowRoot!.querySelector(\"mwc-dialog\")!.close();\n  }\n\n  static styles = [\n    esphomeDialogStyles,\n    esphomeSvgStyles,\n    css`\n      mwc-list-item {\n        margin: 0 -20px;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"esphome-download-type-dialog\": ESPHomeDownloadTypeDialog;\n  }\n}\n"],"names":["ESPHomeDownloadTypeDialog","LitElement","render","heading","content","html","this","_error","_downloadTypes","map","type","_handleDownload","title","description","metaChevronRight","platformSupportsWebSerial","firstUpdated","changedProps","super","getDownloadTypes","configuration","then","types","length","_close","catch","err","message","link","document","createElement","download","href","getDownloadUrl","body","appendChild","click","remove","shadowRoot","querySelector","close","styles","esphomeDialogStyles","esphomeSvgStyles","css","__decorate","property","prototype","state","customElement"],"mappings":"oSAgBA,IAAMA,EAAN,cAAwCC,EAO5B,MAAAC,GACR,IAAIC,EACAC,EAyBJ,OAvBAD,EAAU,wCACVC,EAAUC,CAAI;QACVC,KAAKC,OAASF,CAAI,sBAAsBC,KAAKC,eAAiB;QAC7DD,KAAKE,eAEJH,CAAI;cACAC,KAAKE,eAAeC,KACnBC,GAASL,CAAI;;;;;2BAKD,IAAMC,KAAKK,gBAAgBD;;0BAE5BA,EAAKE;2CACYF,EAAKG;oBAC5BC;;;YAZVT,CAAI;MAmBHA,CAAI;iCAvBD;UAyBJD;UACAE,KAAKS,0BACHV,CAAI;;;;;;;;cASJ;;;;;;;;;MAYA,YAAAW,CAAaC,GACrBC,MAAMF,aAAaC,GACnBE,EAAiBb,KAAKc,eACnBC,MAAMC,IACL,GAAoB,GAAhBA,EAAMC,OAGR,OAFAjB,KAAKK,gBAAgBW,EAAM,SAC3BhB,KAAKkB,SAGPlB,KAAKE,eAAiBc,CAAK,IAE5BG,OAAOC,IACNpB,KAAKC,OAASmB,EAAIC,SAAWD,CAAG,IAI9B,eAAAf,CAAgBD,GACtB,MAAMkB,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAWrB,EAAKqB,SACrBH,EAAKI,KAAOC,EAAe3B,KAAKc,cAAeV,GAC/CmB,SAASK,KAAKC,YAAYP,GAC1BA,EAAKQ,QACLR,EAAKS,SAGC,MAAAb,GACNlB,KAAKgC,WAAYC,cAAc,cAAeC,UAGzCxC,EAAAyC,OAAS,CACdC,EACAC,EACAC,CAAG;;;;OA1FcC,EAAA,CAAlBC,KAAyC9C,EAAA+C,UAAA,qBAAA,GACvBF,EAAA,CAAlBC,KAAsD9C,EAAA+C,UAAA,iCAAA,GAEtCF,EAAA,CAAhBG,KAAgChD,EAAA+C,UAAA,cAAA,GAChBF,EAAA,CAAhBG,KAAgDhD,EAAA+C,UAAA,sBAAA,GAL7C/C,EAAyB6C,EAAA,CAD9BI,EAAc,iCACTjD"}