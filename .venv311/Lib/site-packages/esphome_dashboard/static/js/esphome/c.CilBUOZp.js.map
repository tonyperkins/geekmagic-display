{"version":3,"file":"c.CilBUOZp.js","sources":["../../../../src/const.ts"],"sourcesContent":["import { svg } from \"lit\";\n\nexport const supportsWebSerial = \"serial\" in navigator;\nexport const allowsWebSerial = window.isSecureContext;\n\nexport type SupportedPlatforms =\n  | \"ESP8266\"\n  | \"ESP32\"\n  | \"ESP32S2\"\n  | \"ESP32S3\"\n  | \"ESP32C2\"\n  | \"ESP32C3\"\n  | \"ESP32C5\"\n  | \"ESP32C6\"\n  | \"ESP32C61\"\n  | \"ESP32H2\"\n  | \"ESP32P4\"\n  | \"RP2040\"\n  | \"BK72XX\"\n  | \"RTL87XX\";\n\nexport type PlatformData = {\n  label: string;\n  showInPickerTitle: boolean;\n  showInDeviceTypePicker: boolean;\n  defaultBoard: string | null;\n};\n\n// Platforms supported by ESPHome\nexport const supportedPlatforms = {\n  ESP32: {\n    label: \"ESP32\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"esp32dev\",\n  },\n  ESP32S2: {\n    label: \"ESP32-S2\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"esp32-s2-saola-1\",\n  },\n  ESP32S3: {\n    label: \"ESP32-S3\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"esp32-s3-devkitc-1\",\n  },\n  ESP32C2: {\n    label: \"ESP32-C2\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: false,\n    defaultBoard: \"esp32-c2-devkitm-1\",\n  },\n  ESP32C3: {\n    label: \"ESP32-C3\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"esp32-c3-devkitm-1\",\n  },\n  ESP32C5: {\n    label: \"ESP32-C5\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: false,\n    defaultBoard: \"esp32-c5-devkitc-1\",\n  },\n  ESP32C6: {\n    label: \"ESP32-C6\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"esp32-c6-devkitc-1\",\n  },\n  ESP32C61: {\n    label: \"ESP32-C61\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: false,\n    defaultBoard: \"esp32-c61-devkitc-1\",\n  },\n  ESP32H2: {\n    label: \"ESP32-H2\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: false,\n    defaultBoard: \"esp32-h2-devkitm-1\",\n  },\n  ESP32P4: {\n    label: \"ESP32-P4\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: false,\n    defaultBoard: \"esp32-p4-function-ev-board\",\n  },\n  ESP8266: {\n    label: \"ESP8266\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"esp01_1m\",\n  },\n  RP2040: {\n    label: \"Raspberry Pi Pico W\",\n    showInPickerTitle: false,\n    showInDeviceTypePicker: true,\n    defaultBoard: \"rpipicow\",\n  },\n  BK72XX: {\n    label: \"BK72xx\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: null,\n  },\n  RTL87XX: {\n    label: \"RTL87xx\",\n    showInPickerTitle: true,\n    showInDeviceTypePicker: true,\n    defaultBoard: null,\n  },\n} as const satisfies { [key in SupportedPlatforms]: PlatformData };\n\n// esploader.chip.CHIP_NAME mapped to ESPHome platform names\nexport const chipFamilyToPlatform = {\n  ESP32: \"ESP32\",\n  \"ESP32-S2\": \"ESP32S2\",\n  \"ESP32-S3\": \"ESP32S3\",\n  \"ESP32-C2\": \"ESP32C2\",\n  \"ESP32-C3\": \"ESP32C3\",\n  \"ESP32-C5\": \"ESP32C5\",\n  \"ESP32-C6\": \"ESP32C6\",\n  \"ESP32-C61\": \"ESP32C61\",\n  \"ESP32-H2\": \"ESP32H2\",\n  \"ESP32-P4\": \"ESP32P4\",\n  ESP8266: \"ESP8266\",\n} as const satisfies { [key: string]: SupportedPlatforms };\n\nexport type ChipFamily = keyof typeof chipFamilyToPlatform;\n\nexport const metaChevronRight = svg`\n  <svg class=\"svg-fill-primary\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" slot=\"meta\">\n    <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\n  </svg>\n`;\n\nexport const metaHelp = svg`\n  <svg class=\"svg-fill-primary\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" slot=\"meta\">\n    <path d=\"M11,18H13V16H11V18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,6A4,4 0 0,0 8,10H10A2,2 0 0,1 12,8A2,2 0 0,1 14,10C14,12 11,11.75 11,15H13C13,12.75 16,12.5 16,10A4,4 0 0,0 12,6Z\" />\n  </svg>\n`;\n\nexport interface Logger {\n  log(msg: string, ...args: any[]): void;\n  error(msg: string, ...args: any[]): void;\n  debug(msg: string, ...args: any[]): void;\n}\n"],"names":["supportsWebSerial","navigator","allowsWebSerial","window","isSecureContext","supportedPlatforms","ESP32","label","showInPickerTitle","showInDeviceTypePicker","defaultBoard","ESP32S2","ESP32S3","ESP32C2","ESP32C3","ESP32C5","ESP32C6","ESP32C61","ESP32H2","ESP32P4","ESP8266","RP2040","BK72XX","RTL87XX","chipFamilyToPlatform","metaChevronRight","svg"],"mappings":"wCAEa,MAAAA,EAAoB,WAAYC,UAChCC,EAAkBC,OAAOC,gBA0BzBC,EAAqB,CAChCC,MAAO,CACLC,MAAO,QACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,YAEhBC,QAAS,CACPJ,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,oBAEhBE,QAAS,CACPL,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,sBAEhBG,QAAS,CACPN,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,sBAEhBI,QAAS,CACPP,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,sBAEhBK,QAAS,CACPR,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,sBAEhBM,QAAS,CACPT,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,sBAEhBO,SAAU,CACRV,MAAO,YACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,uBAEhBQ,QAAS,CACPX,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,sBAEhBS,QAAS,CACPZ,MAAO,WACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,8BAEhBU,QAAS,CACPb,MAAO,UACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,YAEhBW,OAAQ,CACNd,MAAO,sBACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,YAEhBY,OAAQ,CACNf,MAAO,SACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,MAEhBa,QAAS,CACPhB,MAAO,UACPC,mBAAmB,EACnBC,wBAAwB,EACxBC,aAAc,OAKLc,EAAuB,CAClClB,MAAO,QACP,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,YAAa,WACb,WAAY,UACZ,WAAY,UACZc,QAAS,WAKEK,EAAmBC,CAAG;;;;EAMXA,CAAG;;;;"}